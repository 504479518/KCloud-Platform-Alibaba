/*
 Navicat Premium Dump SQL

 Source Server         : 127.0.0.1
 Source Server Type    : PostgreSQL
 Source Server Version : 160002 (160002)
 Source Host           : 127.0.0.1:5432
 Source Catalog        : kcloud_platform_nacos
 Source Schema         : public

 Target Server Type    : PostgreSQL
 Target Server Version : 160002 (160002)
 File Encoding         : 65001

 Date: 16/07/2024 22:00:53
*/


-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS "public"."config_info";
CREATE TABLE "public"."config_info"
(
	"id"                 int8                                        NOT NULL GENERATED BY DEFAULT AS IDENTITY (
		INCREMENT 1
		MINVALUE 1
		MAXVALUE 9223372036854775807
		START 1
		CACHE 1
		),
	"data_id"            varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
	"group_id"           varchar(128) COLLATE "pg_catalog"."default",
	"content"            text COLLATE "pg_catalog"."default"         NOT NULL,
	"md5"                varchar(32) COLLATE "pg_catalog"."default",
	"gmt_create"         timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"gmt_modified"       timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"src_user"           text COLLATE "pg_catalog"."default",
	"src_ip"             varchar(50) COLLATE "pg_catalog"."default",
	"app_name"           varchar(128) COLLATE "pg_catalog"."default",
	"tenant_id"          varchar(128) COLLATE "pg_catalog"."default"          DEFAULT ''::character varying,
	"c_desc"             varchar(256) COLLATE "pg_catalog"."default",
	"c_use"              varchar(64) COLLATE "pg_catalog"."default",
	"effect"             varchar(64) COLLATE "pg_catalog"."default",
	"type"               varchar(64) COLLATE "pg_catalog"."default",
	"c_schema"           text COLLATE "pg_catalog"."default",
	"encrypted_data_key" text COLLATE "pg_catalog"."default"         NOT NULL
)
;
COMMENT ON COLUMN "public"."config_info"."id" IS 'id';
COMMENT ON COLUMN "public"."config_info"."data_id" IS 'data_id';
COMMENT ON COLUMN "public"."config_info"."content" IS 'content';
COMMENT ON COLUMN "public"."config_info"."md5" IS 'md5';
COMMENT ON COLUMN "public"."config_info"."gmt_create" IS '创建时间';
COMMENT ON COLUMN "public"."config_info"."gmt_modified" IS '修改时间';
COMMENT ON COLUMN "public"."config_info"."src_user" IS 'source user';
COMMENT ON COLUMN "public"."config_info"."src_ip" IS 'source ip';
COMMENT ON COLUMN "public"."config_info"."tenant_id" IS '租户字段';
COMMENT ON COLUMN "public"."config_info"."encrypted_data_key" IS '秘钥';
COMMENT ON TABLE "public"."config_info" IS 'config_info';

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO "public"."config_info"
VALUES (16, 'application-common-redis.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  data:
    # redis
    redis:
      client-type: lettuce
      host: redis.laokou.org
      port: 6379
      password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
      connect-timeout: 60000ms #连接超时时长（毫秒）
      timeout: 60000ms #超时时长（毫秒）
      lettuce:
        pool:
          max-active: 20 #连接池最大连接数（使用负值表示无极限）
          max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
          max-idle: 10 #连接池最大空闲连接
          min-idle: 5 #连接池最小空间连接', 'c8c0e7fbaa49086163b00c1c8e1fa454', '2023-01-13 12:15:59',
		'2023-11-06 18:02:43', 'nacos', '0:0:0:0:0:0:0:1', '', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'redis公共配置',
		'', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (82, 'application-monitor.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  boot:
    # admin
    admin:
      discovery:
        ignored-services:
          - laokou-im
      notify:
        mail:
          from: 2413176044@qq.com
          to: 2413176044@qq.com
          template: META-INF/spring-boot-admin-server/mail/status-changed.html
  # security
  security:
    user:
      # root
      name: ENC(esZnNM2DrSxZhgTOzu11W2fVsJDDZ1b12aPopMMHCS7lF5+BJun9ri6y5pTUdj6L)
      # laokou123
      password: ENC(mHjKcITM5U60bq7M4fxh4yUQ9L3PPWPskvnWRE0PVxIqQ34Ztx7zOESwWCdjeWPW)
  # mail
  mail:
    host: smtp.qq.com
	username: 2413176044@qq.com
    password: ENC(A7pfP5nvz3Mmc/6Nc3ewvkcNv7AQyZz8qWri7Kn8GqW4vwPFmZt+Vaq0gjS8SS1767v2h0exWJbJpA2zsTtmVA==)
    default-encoding: UTF-8

# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always', 'de1c37757329b0ad75488bf39024489c', '2023-01-16 12:01:23', '2023-07-21 12:37:26', 'nacos',
		'0:0:0:0:0:0:0:1', 'laokou-monitor', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'spring boot admin monitor', '',
		'', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (103, 'application-common-elasticsearch.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

spring:
  # elasticsearch
  elasticsearch:
    uris:
     - https://elasticsearch.laokou.org:9200
    username: ENC(svQedUe/LhX4+kE58LA73GTbkn0xR1Nz4P9hIalcloHMkQ8BCur8LiptBZ9DI78f)
    password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
    connection-timeout: 30s
    socket-timeout: 30s', '54cf98fa1e36856f525336acf7a5d20d', '2023-01-17 10:22:15', '2024-04-07 20:52:38', 'nacos',
		'0:0:0:0:0:0:0:1', '', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'elasticsearch公共配置', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (1270, 'application-common-rocketmq.yaml', 'LAOKOU_GROUP', 'rocketmq:
  producer:
    group: laokou_producer_group
  name-server: rocketmq.laokou.org:9876
  consumer:
    pull-batch-size: 16', '540e67a6edad605be9959a9652d383e2', '2023-01-21 10:43:04', '2023-11-06 18:10:30', 'nacos',
		'0:0:0:0:0:0:0:1', '', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'rocketmq公共配置', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (1567, 'gateway-flow.json', 'LAOKOU_GROUP', '[
  {
    "resource": "laokou-auth",
    "grade": 1,
    "count": 300,
    "intervalSec": 1,
    "burst": 1000,
    "controlBehavior": 0
  },
  {
    "resource": "laokou-admin",
    "grade": 1,
    "count": 300,
    "intervalSec": 1,
    "burst": 1000,
    "controlBehavior": 0
  }
]', 'c5fbcf8031ce039bb97bd44cbfbca16b', '2023-02-26 14:59:20', '2023-04-01 14:42:04', 'nacos', '127.0.0.1',
		'laokou-gateway', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'gateway sentinel flow rule', '', '', 'json', '', '');
INSERT INTO "public"."config_info"
VALUES (1568, 'auth-flow.json', 'LAOKOU_GROUP', '[
  {
    "resource": "/v3/captchas/{uuid}",
    "limitApp": "default",
    "count": 300,
    "grade": 1,
    "strategy": 0,
    "controlBehavior": 0
  },
  {
    "resource": "/v3/secrets",
    "limitApp": "default",
    "count": 300,
    "grade": 1,
    "strategy": 0,
    "controlBehavior": 0
  }
]', '6ae7639ff49789dd99787e908efa836d', '2023-02-26 15:01:51', '2024-05-25 18:20:09.951', 'nacos', '127.0.0.1',
		'laokou-auth', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'auth sentinel  flow rule', '', '', 'json', '', '');
INSERT INTO "public"."config_info"
VALUES (17, 'application-common.yaml', 'LAOKOU_GROUP', '# spring
spring:
  # security
  security:
    oauth2:
      resource-server:
        enabled: true
        request-matcher:
          ignore-patterns:
            GET:
              - /**/v3/api-docs/**=laokou-gateway
              - /v3/api-docs/**=laokou-auth,laokou-admin
              - /swagger-ui.html=laokou-admin,laokou-gateway,laokou-auth
              - /swagger-ui/**=laokou-admin,laokou-gateway,laokou-auth
              - /actuator/**=laokou-admin,laokou-gateway,laokou-auth
              - /error=laokou-admin,laokou-auth
              - /v3/tenants/options=laokou-auth,laokou-gateway
              - /v3/tenants/id=laokou-auth,laokou-gateway
              - /favicon.ico=laokou-gateway
              - /v3/captchas/{uuid}=laokou-gateway,laokou-auth
              - /v3/secrets=laokou-gateway,laokou-auth
              - /graceful-shutdown=laokou-auth
              - /ws=laokou-gateway
              - /doc.html=laokou-gateway
            POST:
              - /v3/captchas=laokou-auth,laokou-gateway
            DELETE:
              - /v3/logouts=laokou-auth,laokou-gateway
  # task
  task-execution:
    thread-name-prefix: laokou-ttl-task-
    pool:
      core-size: 33
      keep-alive: 180s
    fork-join-pool:
      core-size: 33
  cloud:
    # 解决集成sentinel，openfeign启动报错，官方下个版本修复
    openfeign:
      compression:
        response:
          enabled: true
        request:
          enabled: true
      # FeignAutoConfiguration、OkHttpFeignLoadBalancerConfiguration、OkHttpClient#getClient、FeignClientProperties、OptionsFactoryBean#getObject
      # 在BeanFactory调用getBean()时，不是调用getBean，是调用getObject(),因此，getObject()相当于代理了getBean(),而且getObject()对Options初始化，是直接从openfeign.default获取配置值的
      okhttp:
        enabled: true
      circuitbreaker:
        enabled: true
      httpclient:
        enabled: false
        hc5:
          enabled: false
        disable-ssl-validation: true
      client:
        config:
          default:
            connectTimeout: 120000 #连接超时
            readTimeout: 120000 #读取超时
            logger-level: full
      lazy-attributes-resolution: true
    # sentinel
    sentinel:
      eager: true #开启饥饿加载，直接初始化
      transport:
        port: 8769
        dashboard: sentinel.laokou.org:8972
# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# server
server:
  servlet:
    encoding:
      charset: UTF-8
  undertow:
    threads:
      # 设置IO线程数，来执行非阻塞任务，负责多个连接数
      io: 16
      # 工作线程数
      worker: 256
    # 每块buffer的空间大小
    buffer-size: 1024
    # 分配堆外内存
    direct-buffers: true

# feign
feign:
  sentinel:
    enabled: true
    default-rule: default
    rules:
      # https://sentinelguard.io/zh-cn/docs/circuit-breaking.html
      default:
        - grade: 2 # 异常数策略
          count: 1 # 异常数模式下为对应的阈值
          timeWindow: 30 # 熔断时长，单位为 s（经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。ERROR_COUNT）
          statIntervalMs: 1000 # 统计时长（单位为 ms），如 60*1000 代表分钟级（1.8.0 引入）
          minRequestAmount: 5 # 熔断触发的最小请求数，请求数小于该值时即使异常比率超出阈值也不会熔断
tenant:
  domain-names:
    - laokou.org
    - laokouyun.org
    - laokou.org.cn

springdoc:
  swagger-ui:
    path: /swagger-ui.html', 'e83a99587ac917866dee016df29fd662', '2023-01-13 12:16:46', '2024-05-26 00:03:05.977',
		'nacos', '127.0.0.1', '', 'a61abd4c-ef96-42a5-99a1-616adee531f3', '', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (26, 'router.json', 'LAOKOU_GROUP', '[
  {
    "id": "laokou-auth",
    "uri": "lb://laokou-auth",
    "predicates": [
      {
        "name": "Path",
        "args": {
          "pattern": "/auth/**"
        }
      },
      {
        "name": "Weight",
        "args": {
          "_genkey_0": "auth",
          "_genkey_1": "100"
        }
      }
    ],
    "filters": [
      {
        "name": "StripPrefix",
        "args": {
          "parts": "1"
        }
      },
      {
        "name": "RewritePath",
        "args": {
          "_genkey_0": "/auth/(?<path>.*)",
          "_genkey_1": "/$\\{path}"
        }
      }
    ],
    "metadata": {
      "version": "v3"
    },
    "order": 1
  },
  {
    "id": "laokou-admin",
    "uri": "lb://laokou-admin",
    "predicates": [
      {
        "name": "Path",
        "args": {
          "pattern": "/admin/**"
        }
      },
      {
        "name": "Weight",
        "args": {
          "_genkey_0": "admin",
          "_genkey_1": "100"
        }
      }
    ],
    "filters": [
      {
        "name": "StripPrefix",
        "args": {
          "parts": "1"
        }
      },
      {
        "name": "RewritePath",
        "args": {
          "_genkey_0": "/admin/(?<path>.*)",
          "_genkey_1": "/$\\{path}"
        }
      }
    ],
    "metadata": {
      "version": "v3"
    },
    "order": 1
  },
  {
    "id": "laokou-im",
    "uri": "lb:wss://laokou-im",
    "predicates": [
      {
        "name": "Path",
        "args": {
          "pattern": "/im/**"
        }
      },
      {
        "name": "Weight",
        "args": {
          "_genkey_0": "im",
          "_genkey_1": "100"
        }
      }
    ],
    "filters": [
      {
        "name": "StripPrefix",
        "args": {
          "parts": "1"
        }
      },
      {
        "name": "RewritePath",
        "args": {
          "_genkey_0": "/im/(?<path>.*)",
          "_genkey_1": "/$\\{path}"
        }
      }
    ],
    "metadata": {
      "version": "v3"
    },
    "order": 1
  }
]', '0ed5d74d692a46b070c46572b94ca61d', '2023-01-13 15:44:25', '2024-05-25 18:14:53.409', 'nacos', '127.0.0.1',
		'laokou-gateway', 'a61abd4c-ef96-42a5-99a1-616adee531f3', '动态路由配置', '', '', 'json', '', '');
INSERT INTO "public"."config_info"
VALUES (1569, 'admin-flow.json', 'LAOKOU_GROUP', '[
  {
    "resource": "/v3/users/profile",
    "limitApp": "default",
    "count": 300,
    "grade": 1,
    "strategy": 0,
    "controlBehavior": 0
  }
]', '31d82f93a5909b2529f159848116e162', '2023-02-26 15:03:07', '2024-05-25 18:19:15.142', 'nacos', '127.0.0.1',
		'laokou-admin', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'admin sentinel flow rule', '', '', 'json', '', '');
INSERT INTO "public"."config_info"
VALUES (1799, 'application-common-monitor.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  # https://codecentric.github.io/spring-boot-admin/current
  boot:
    # admin
    admin:
      client:
        url: https://monitor.laokou.org:5000
        # root
        username: ENC(esZnNM2DrSxZhgTOzu11W2fVsJDDZ1b12aPopMMHCS7lF5+BJun9ri6y5pTUdj6L)
        # laokou123
        password: ENC(mHjKcITM5U60bq7M4fxh4yUQ9L3PPWPskvnWRE0PVxIqQ34Ztx7zOESwWCdjeWPW)',
		'7d934a9e4b0ebe9803a17ccd520dca3e', '2023-07-18 16:59:45', '2023-11-06 18:09:16', 'nacos', '0:0:0:0:0:0:0:1',
		'', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'monitor公共配置', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (2118, 'application-report.yaml', 'LAOKOU_GROUP', 'server:
  port: 8088', '89f7b26715cf760d099a258200381fe0', '2023-10-01 04:56:06', '2024-05-01 00:45:57', 'nacos',
		'0:0:0:0:0:0:0:1', 'laokou-report', 'a61abd4c-ef96-42a5-99a1-616adee531f3', '', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (48, 'application-gateway.yaml', 'LAOKOU_GROUP', '# ip
spring:
  cloud:
    gateway:
      ip:
        white:
          enabled: false
        black:
          enabled: false

knife4j:
  # 聚合swagger文档
  gateway:
    enabled: false', '20b272cb01dae1613a01b3b46d61e487', '2024-05-25 18:13:10.704', '2024-05-25 18:46:33.133', 'nacos',
		'127.0.0.1', 'laokou-gateway', '8140e92b-fb43-48f5-b63b-7506185206a5', 'gateway配置', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (1477, 'application-mail.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
spring:
  # mail
  mail:
    host: smtp.qq.com
    username: 2413176044@qq.com
    password: ENC(A7pfP5nvz3Mmc/6Nc3ewvkcNv7AQyZz8qWri7Kn8GqW4vwPFmZt+Vaq0gjS8SS1767v2h0exWJbJpA2zsTtmVA==)
    default-encoding: UTF-8', '3e16e7d481fcc41559736dc5f7258251', '2023-02-13 20:00:32', '2024-07-16 21:52:10.149',
		'nacos', '127.0.0.1', 'laokou-mail', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'mail配置', '', '', 'yaml', '',
		'');
INSERT INTO "public"."config_info"
VALUES (36, 'router.json', 'LAOKOU_GROUP', '[
  {
    "id": "laokou-auth",
    "uri": "lb://laokou-auth",
    "predicates": [
      {
        "name": "Path",
        "args": {
          "pattern": "/auth/**"
        }
      },
      {
        "name": "Weight",
        "args": {
          "_genkey_0": "auth",
          "_genkey_1": "100"
        }
      }
    ],
    "filters": [
      {
        "name": "StripPrefix",
        "args": {
          "parts": "1"
        }
      },
      {
        "name": "RewritePath",
        "args": {
          "_genkey_0": "/auth/(?<path>.*)",
          "_genkey_1": "/$\\{path}"
        }
      }
    ],
    "metadata": {
      "version": "v3"
    },
    "order": 1
  },
  {
    "id": "laokou-admin",
    "uri": "lb://laokou-admin",
    "predicates": [
      {
        "name": "Path",
        "args": {
          "pattern": "/admin/**"
        }
      },
      {
        "name": "Weight",
        "args": {
          "_genkey_0": "admin",
          "_genkey_1": "100"
        }
      }
    ],
    "filters": [
      {
        "name": "StripPrefix",
        "args": {
          "parts": "1"
        }
      },
      {
        "name": "RewritePath",
        "args": {
          "_genkey_0": "/admin/(?<path>.*)",
          "_genkey_1": "/$\\{path}"
        }
      }
    ],
    "metadata": {
      "version": "v3"
    },
    "order": 1
  },
  {
    "id": "laokou-im",
    "uri": "lb:wss://laokou-im",
    "predicates": [
      {
        "name": "Path",
        "args": {
          "pattern": "/im/**"
        }
      },
      {
        "name": "Weight",
        "args": {
          "_genkey_0": "im",
          "_genkey_1": "100"
        }
      }
    ],
    "filters": [
      {
        "name": "StripPrefix",
        "args": {
          "parts": "1"
        }
      },
      {
        "name": "RewritePath",
        "args": {
          "_genkey_0": "/im/(?<path>.*)",
          "_genkey_1": "/$\\{path}"
        }
      }
    ],
    "metadata": {
      "version": "v3"
    },
    "order": 1
  }
]', '0ed5d74d692a46b070c46572b94ca61d', '2024-05-25 18:13:10.616', '2024-05-25 18:16:32.596', 'nacos', '127.0.0.1',
		'laokou-gateway', '8140e92b-fb43-48f5-b63b-7506185206a5', '动态路由配置', '', '', 'json', '', '');
INSERT INTO "public"."config_info"
VALUES (2159, 'application-common-kafka.yaml', 'LAOKOU_GROUP', 'spring:
  kafka:
    bootstrap-servers: kafka.laokou.org:9092
    consumer:
      # 禁用自动提交（按周期）已消费offset
      enable-auto-commit: false
      # 单次poll()调用返回的记录数
      max-poll-records: 50
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      # 发生错误后，消息重发的次数。
      retries: 5
      #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 16384
      # 设置生产者内存缓冲区的大小。
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 0
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      # listner负责ack，每调用一次，就立即commit
      ack-mode: manual
      # 批量batch类型
      type: batch
      # topic不存在报错
      missing-topics-fatal: false', '157c7aaa53329ababa1aab96b9878fad', '2023-10-26 08:54:23', '2023-11-06 18:14:00',
		'nacos', '0:0:0:0:0:0:0:1', '', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'kafka公共配置', '', '', 'yaml', '',
		'');
INSERT INTO "public"."config_info"
VALUES (2178, 'application-logstash.yaml', 'LAOKOU_GROUP', 'spring:
  xxl-job:
    admin:
      address: http://xxl.job.laokou.org:9095/xxl-job-admin
    executor:
      app-name: laokou-logstash
      port: -1
      log-path: ./logs/xxl-job/laokou-logstash
      access-token: yRagfkAddGXdTySYTFzhvMguinulMIMSCcXUbljWDhe
      intentionalities: 7', '81c3de6319db8560c68935977f2d141f', '2023-11-03 07:37:45', '2024-01-30 14:46:47', 'nacos',
		'0:0:0:0:0:0:0:1', 'laokou-logstash', 'a61abd4c-ef96-42a5-99a1-616adee531f3', '', '', '', 'yaml', '', '');

INSERT INTO "public"."config_info"
VALUES (1570, 'admin-degrade.json', 'LAOKOU_GROUP', '[
  {
    "resource": "POST:https://laokou-flowable/work/task/api/query",
    "count": 200,
    "grade": 0,
    "slowRatioThreshold": 0.1,
    "minRequestAmount": 5,
    "timeWindow": 30
  },
  {
    "resource": "POST:https://laokou-flowable/work/definition/api/query",
    "count": 200,
    "grade": 0,
    "slowRatioThreshold": 0.1,
    "minRequestAmount": 5,
    "timeWindow": 30
  }
]', '2c0d4de0716f94bd6878b0a68d3faa0f', '2023-02-26 15:55:49', '2024-05-03 09:24:56.976', 'nacos', '0:0:0:0:0:0:0:1',
		'laokou-admin', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'admin sentinel degrade rule', '', '', 'json', '', '');
INSERT INTO "public"."config_info"
VALUES (18, 'application-common-redis.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  data:
    # redis
    redis:
      client-type: lettuce
      host: redis.laokou.org
      port: 6379
      password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
      connect-timeout: 60000ms #连接超时时长（毫秒）
      timeout: 60000ms #超时时长（毫秒）
      lettuce:
        pool:
          max-active: 20 #连接池最大连接数（使用负值表示无极限）
          max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
          max-idle: 10 #连接池最大空闲连接
          min-idle: 5 #连接池最小空间连接', 'c8c0e7fbaa49086163b00c1c8e1fa454', '2024-05-25 18:12:47.33',
		'2024-05-25 18:13:33.296', NULL, '127.0.0.1', '', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'redis公共配置', NULL,
		NULL, 'yaml', NULL, '');
INSERT INTO "public"."config_info"
VALUES (20, 'application-common-elasticsearch.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

spring:
  # elasticsearch
  elasticsearch:
    uris:
     - https://elasticsearch.laokou.org:9200
    username: ENC(svQedUe/LhX4+kE58LA73GTbkn0xR1Nz4P9hIalcloHMkQ8BCur8LiptBZ9DI78f)
    password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
    connection-timeout: 30s
    socket-timeout: 30s', '54cf98fa1e36856f525336acf7a5d20d', '2024-05-25 18:12:47.339', '2024-05-25 18:13:33.322',
		NULL, '127.0.0.1', '', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'elasticsearch公共配置', NULL, NULL, 'yaml',
		NULL, '');
INSERT INTO "public"."config_info"
VALUES (21, 'application-common-rocketmq.yaml', 'LAOKOU_GROUP', 'rocketmq:
  producer:
    group: laokou_producer_group
  name-server: rocketmq.laokou.org:9876
  consumer:
    pull-batch-size: 16', '540e67a6edad605be9959a9652d383e2', '2024-05-25 18:12:47.344', '2024-05-25 18:13:33.332',
		NULL, '127.0.0.1', '', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'rocketmq公共配置', NULL, NULL, 'yaml', NULL,
		'');
INSERT INTO "public"."config_info"
VALUES (24, 'gateway-flow.json', 'LAOKOU_GROUP', '[
  {
    "resource": "laokou-auth",
    "grade": 1,
    "count": 300,
    "intervalSec": 1,
    "burst": 1000,
    "controlBehavior": 0
  },
  {
    "resource": "laokou-admin",
    "grade": 1,
    "count": 300,
    "intervalSec": 1,
    "burst": 1000,
    "controlBehavior": 0
  }
]', 'c5fbcf8031ce039bb97bd44cbfbca16b', '2024-05-25 18:12:47.358', '2024-05-25 18:13:33.364', NULL, '127.0.0.1',
		'laokou-gateway', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'gateway sentinel flow rule', NULL, NULL, 'json',
		NULL, '');
INSERT INTO "public"."config_info"
VALUES (25, 'auth-flow.json', 'LAOKOU_GROUP', '[
  {
    "resource": "/v3/captchas/{uuid}",
    "limitApp": "default",
    "count": 300,
    "grade": 1,
    "strategy": 0,
    "controlBehavior": 0
  },
  {
    "resource": "/v3/secrets",
    "limitApp": "default",
    "count": 300,
    "grade": 1,
    "strategy": 0,
    "controlBehavior": 0
  }
]', '6ae7639ff49789dd99787e908efa836d', '2024-05-25 18:12:47.362', '2024-05-25 18:20:22.239', 'nacos', '127.0.0.1',
		'laokou-auth', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'auth sentinel  flow rule', '', '', 'json', '', '');
INSERT INTO "public"."config_info"
VALUES (23, 'application-mail.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
spring:
  # mail
  mail:
    host: smtp.qq.com
    username: 2413176044@qq.com
    password: ENC(A7pfP5nvz3Mmc/6Nc3ewvkcNv7AQyZz8qWri7Kn8GqW4vwPFmZt+Vaq0gjS8SS1767v2h0exWJbJpA2zsTtmVA==)
    default-encoding: UTF-8', '3e16e7d481fcc41559736dc5f7258251', '2024-05-25 18:12:47.354', '2024-07-16 21:51:27.174',
		'nacos', '127.0.0.1', 'laokou-mail', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'mail配置', '', '', 'yaml', '',
		'');
INSERT INTO "public"."config_info"
VALUES (38, 'application-common-monitor.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  # https://codecentric.github.io/spring-boot-admin/current
  boot:
    # admin
    admin:
      client:
        url: https://monitor.laokou.org:5000
        # root
        username: ENC(esZnNM2DrSxZhgTOzu11W2fVsJDDZ1b12aPopMMHCS7lF5+BJun9ri6y5pTUdj6L)
        # laokou123
        password: ENC(mHjKcITM5U60bq7M4fxh4yUQ9L3PPWPskvnWRE0PVxIqQ34Ztx7zOESwWCdjeWPW)',
		'7d934a9e4b0ebe9803a17ccd520dca3e', '2024-05-25 18:13:10.637', '2024-05-25 18:13:10.637', NULL, '127.0.0.1', '',
		'8140e92b-fb43-48f5-b63b-7506185206a5', 'monitor公共配置', NULL, NULL, 'yaml', NULL, '');
INSERT INTO "public"."config_info"
VALUES (70, 'application-gateway.yaml', 'LAOKOU_GROUP', '# ip
spring:
  cloud:
    gateway:
      ip:
        white:
          enabled: false
        black:
          enabled: false

knife4j:
  # 聚合swagger文档
  gateway:
    enabled: true', 'b4ccbf4df335be2d07acf78a456ad733', '2024-05-25 18:13:33.458', '2024-05-25 18:46:18.892', 'nacos',
		'127.0.0.1', 'laokou-gateway', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'gateway配置', '', '', 'yaml', '', '');

INSERT INTO "public"."config_info"
VALUES (33, 'gateway-flow.json', 'LAOKOU_GROUP', '[
  {
    "resource": "laokou-auth",
    "grade": 1,
    "count": 300,
    "intervalSec": 1,
    "burst": 1000,
    "controlBehavior": 0
  },
  {
    "resource": "laokou-admin",
    "grade": 1,
    "count": 300,
    "intervalSec": 1,
    "burst": 1000,
    "controlBehavior": 0
  }
]', 'c5fbcf8031ce039bb97bd44cbfbca16b', '2024-05-25 18:13:10.6', '2024-05-25 18:13:10.6', NULL, '127.0.0.1',
		'laokou-gateway', '8140e92b-fb43-48f5-b63b-7506185206a5', 'gateway sentinel flow rule', NULL, NULL, 'json',
		NULL, '');
INSERT INTO "public"."config_info"
VALUES (39, 'application-report.yaml', 'LAOKOU_GROUP', 'server:
  port: 8088', '89f7b26715cf760d099a258200381fe0', '2024-05-25 18:13:10.644', '2024-05-25 18:13:10.644', NULL,
		'127.0.0.1', 'laokou-report', '8140e92b-fb43-48f5-b63b-7506185206a5', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO "public"."config_info"
VALUES (40, 'application-common-kafka.yaml', 'LAOKOU_GROUP', 'spring:
  kafka:
    bootstrap-servers: kafka.laokou.org:9092
    consumer:
      # 禁用自动提交（按周期）已消费offset
      enable-auto-commit: false
      # 单次poll()调用返回的记录数
      max-poll-records: 50
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      # 发生错误后，消息重发的次数。
      retries: 5
      #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 16384
      # 设置生产者内存缓冲区的大小。
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 0
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      # listner负责ack，每调用一次，就立即commit
      ack-mode: manual
      # 批量batch类型
      type: batch
      # topic不存在报错
      missing-topics-fatal: false', '157c7aaa53329ababa1aab96b9878fad', '2024-05-25 18:13:10.65',
		'2024-05-25 18:13:10.65', NULL, '127.0.0.1', '', '8140e92b-fb43-48f5-b63b-7506185206a5', 'kafka公共配置', NULL,
		NULL, 'yaml', NULL, '');
INSERT INTO "public"."config_info"
VALUES (41, 'application-logstash.yaml', 'LAOKOU_GROUP', 'spring:
  xxl-job:
    admin:
      address: http://xxl.job.laokou.org:9095/xxl-job-admin
    executor:
      app-name: laokou-logstash
      port: -1
      log-path: ./logs/xxl-job/laokou-logstash
      access-token: yRagfkAddGXdTySYTFzhvMguinulMIMSCcXUbljWDhe
      intentionalities: 7', '81c3de6319db8560c68935977f2d141f', '2024-05-25 18:13:10.655', '2024-05-25 18:13:10.655',
		NULL, '127.0.0.1', 'laokou-logstash', '8140e92b-fb43-48f5-b63b-7506185206a5', '', NULL, NULL, 'yaml', NULL, '');

INSERT INTO "public"."config_info"
VALUES (44, 'admin-degrade.json', 'LAOKOU_GROUP', '[
  {
    "resource": "POST:https://laokou-flowable/work/task/api/query",
    "count": 200,
    "grade": 0,
    "slowRatioThreshold": 0.1,
    "minRequestAmount": 5,
    "timeWindow": 30
  },
  {
    "resource": "POST:https://laokou-flowable/work/definition/api/query",
    "count": 200,
    "grade": 0,
    "slowRatioThreshold": 0.1,
    "minRequestAmount": 5,
    "timeWindow": 30
  }
]', '2c0d4de0716f94bd6878b0a68d3faa0f', '2024-05-25 18:13:10.676', '2024-05-25 18:13:10.676', NULL, '127.0.0.1',
		'laokou-admin', '8140e92b-fb43-48f5-b63b-7506185206a5', 'admin sentinel degrade rule', NULL, NULL, 'json', NULL,
		'');
INSERT INTO "public"."config_info"
VALUES (35, 'admin-flow.json', 'LAOKOU_GROUP', '[
  {
    "resource": "/v3/users/profile",
    "limitApp": "default",
    "count": 300,
    "grade": 1,
    "strategy": 0,
    "controlBehavior": 0
  }
]', '31d82f93a5909b2529f159848116e162', '2024-05-25 18:13:10.61', '2024-05-25 18:19:37.997', 'nacos', '127.0.0.1',
		'laokou-admin', '8140e92b-fb43-48f5-b63b-7506185206a5', 'admin sentinel flow rule', '', '', 'json', '', '');
INSERT INTO "public"."config_info"
VALUES (34, 'auth-flow.json', 'LAOKOU_GROUP', '[
  {
    "resource": "/v3/captchas/{uuid}",
    "limitApp": "default",
    "count": 300,
    "grade": 1,
    "strategy": 0,
    "controlBehavior": 0
  },
  {
    "resource": "/v3/secrets",
    "limitApp": "default",
    "count": 300,
    "grade": 1,
    "strategy": 0,
    "controlBehavior": 0
  }
]', '6ae7639ff49789dd99787e908efa836d', '2024-05-25 18:13:10.604', '2024-05-25 18:19:55.655', 'nacos', '127.0.0.1',
		'laokou-auth', '8140e92b-fb43-48f5-b63b-7506185206a5', 'auth sentinel  flow rule', '', '', 'json', '', '');
INSERT INTO "public"."config_info"
VALUES (37, 'application-common.yaml', 'LAOKOU_GROUP', '# spring
spring:
  # security
  security:
    oauth2:
      resource-server:
        enabled: true
        request-matcher:
          ignore-patterns:
            GET:
              - /**/v3/api-docs/**=laokou-gateway
              - /v3/api-docs/**=laokou-auth,laokou-admin
              - /swagger-ui.html=laokou-admin,laokou-gateway,laokou-auth
              - /swagger-ui/**=laokou-admin,laokou-gateway,laokou-auth
              - /actuator/**=laokou-admin,laokou-gateway,laokou-auth
              - /error=laokou-admin,laokou-auth
              - /v3/tenants/options=laokou-auth,laokou-gateway
              - /v3/tenants/id=laokou-auth,laokou-gateway
              - /favicon.ico=laokou-gateway
              - /v3/captchas/{uuid}=laokou-gateway,laokou-auth
              - /v3/secrets=laokou-gateway,laokou-auth
              - /graceful-shutdown=laokou-auth
              - /ws=laokou-gateway
              - /doc.html=laokou-gateway
			POST:
			  - /v3/captchas=laokou-auth,laokou-gateway
            DELETE:
              - /v3/logouts=laokou-auth,laokou-gateway
  # task
  task-execution:
    thread-name-prefix: laokou-ttl-task-
    pool:
      core-size: 33
      keep-alive: 180s
    fork-join-pool:
      core-size: 33
  cloud:
    # 解决集成sentinel，openfeign启动报错，官方下个版本修复
    openfeign:
      compression:
        response:
          enabled: true
        request:
          enabled: true
      # FeignAutoConfiguration、OkHttpFeignLoadBalancerConfiguration、OkHttpClient#getClient、FeignClientProperties、OptionsFactoryBean#getObject
      # 在BeanFactory调用getBean()时，不是调用getBean，是调用getObject(),因此，getObject()相当于代理了getBean(),而且getObject()对Options初始化，是直接从openfeign.default获取配置值的
      okhttp:
        enabled: true
      circuitbreaker:
        enabled: true
      httpclient:
        enabled: false
        hc5:
          enabled: false
        disable-ssl-validation: true
      client:
        config:
          default:
            connectTimeout: 120000 #连接超时
            readTimeout: 120000 #读取超时
            logger-level: full
      lazy-attributes-resolution: true
    # sentinel
    sentinel:
      eager: true #开启饥饿加载，直接初始化
      transport:
        port: 8769
        dashboard: sentinel.laokou.org:8972

# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# server
server:
  servlet:
    encoding:
      charset: UTF-8
  undertow:
    threads:
      # 设置IO线程数，来执行非阻塞任务，负责多个连接数
      io: 16
      # 工作线程数
      worker: 256
    # 每块buffer的空间大小
    buffer-size: 1024
    # 分配堆外内存
    direct-buffers: true

# feign
feign:
  sentinel:
    enabled: true
    default-rule: default
    rules:
      # https://sentinelguard.io/zh-cn/docs/circuit-breaking.html
      default:
        - grade: 2 # 异常数策略
          count: 1 # 异常数模式下为对应的阈值
          timeWindow: 30 # 熔断时长，单位为 s（经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。ERROR_COUNT）
          statIntervalMs: 1000 # 统计时长（单位为 ms），如 60*1000 代表分钟级（1.8.0 引入）
          minRequestAmount: 5 # 熔断触发的最小请求数，请求数小于该值时即使异常比率超出阈值也不会熔断
tenant:
  domain-names:
    - laokou.org
    - laokouyun.org
    - laokou.org.cn

springdoc:
  swagger-ui:
    path: /swagger-ui.html', 'e83a99587ac917866dee016df29fd662', '2024-05-25 18:13:10.622', '2024-05-26 00:02:32.884',
		'nacos', '127.0.0.1', '', '8140e92b-fb43-48f5-b63b-7506185206a5', '', '', '', 'yaml', '', '');

INSERT INTO "public"."config_info"
VALUES (27, 'application-common-redis.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  data:
    # redis
    redis:
      client-type: lettuce
      host: redis.laokou.org
      port: 6379
      password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
      connect-timeout: 60000ms #连接超时时长（毫秒）
      timeout: 60000ms #超时时长（毫秒）
      lettuce:
        pool:
          max-active: 20 #连接池最大连接数（使用负值表示无极限）
          max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
          max-idle: 10 #连接池最大空闲连接
          min-idle: 5 #连接池最小空间连接', 'c8c0e7fbaa49086163b00c1c8e1fa454', '2024-05-25 18:13:10.544',
		'2024-05-25 18:13:10.544', NULL, '127.0.0.1', '', '8140e92b-fb43-48f5-b63b-7506185206a5', 'redis公共配置', NULL,
		NULL, 'yaml', NULL, '');
INSERT INTO "public"."config_info"
VALUES (28, 'application-monitor.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  boot:
    # admin
    admin:
      discovery:
        ignored-services:
          - laokou-im
      notify:
        mail:
          from: 2413176044@qq.com
          to: 2413176044@qq.com
          template: META-INF/spring-boot-admin-server/mail/status-changed.html
  # security
  security:
    user:
      # root
      name: ENC(esZnNM2DrSxZhgTOzu11W2fVsJDDZ1b12aPopMMHCS7lF5+BJun9ri6y5pTUdj6L)
      # laokou123
      password: ENC(mHjKcITM5U60bq7M4fxh4yUQ9L3PPWPskvnWRE0PVxIqQ34Ztx7zOESwWCdjeWPW)
  # mail
  mail:
    host: smtp.qq.com
    password: ENC(A7pfP5nvz3Mmc/6Nc3ewvkcNv7AQyZz8qWri7Kn8GqW4vwPFmZt+Vaq0gjS8SS1767v2h0exWJbJpA2zsTtmVA==)
    default-encoding: UTF-8
    username: 2413176044@qq.com

# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always', 'de1c37757329b0ad75488bf39024489c', '2024-05-25 18:13:10.57', '2024-05-25 18:13:10.57',
		NULL, '127.0.0.1', 'laokou-monitor', '8140e92b-fb43-48f5-b63b-7506185206a5', 'spring boot admin monitor', NULL,
		NULL, 'yaml', NULL, '');
INSERT INTO "public"."config_info"
VALUES (29, 'application-common-elasticsearch.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

spring:
  # elasticsearch
  elasticsearch:
    uris:
     - https://elasticsearch.laokou.org:9200
    username: ENC(svQedUe/LhX4+kE58LA73GTbkn0xR1Nz4P9hIalcloHMkQ8BCur8LiptBZ9DI78f)
    password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
    connection-timeout: 30s
    socket-timeout: 30s', '54cf98fa1e36856f525336acf7a5d20d', '2024-05-25 18:13:10.576', '2024-05-25 18:13:10.576',
		NULL, '127.0.0.1', '', '8140e92b-fb43-48f5-b63b-7506185206a5', 'elasticsearch公共配置', NULL, NULL, 'yaml',
		NULL, '');
INSERT INTO "public"."config_info"
VALUES (30, 'application-common-rocketmq.yaml', 'LAOKOU_GROUP', 'rocketmq:
  producer:
    group: laokou_producer_group
  name-server: rocketmq.laokou.org:9876
  consumer:
    pull-batch-size: 16', '540e67a6edad605be9959a9652d383e2', '2024-05-25 18:13:10.582', '2024-05-25 18:13:10.582',
		NULL, '127.0.0.1', '', '8140e92b-fb43-48f5-b63b-7506185206a5', 'rocketmq公共配置', NULL, NULL, 'yaml', NULL,
		'');
INSERT INTO "public"."config_info"
VALUES (1273, 'application-gateway.yaml', 'LAOKOU_GROUP', '# ip
spring:
  cloud:
    gateway:
      ip:
        white:
          enabled: false
        black:
          enabled: false

knife4j:
  # 聚合swagger文档
  gateway:
    enabled: true', 'b4ccbf4df335be2d07acf78a456ad733', '2023-01-22 13:16:13', '2024-05-25 18:46:00.582', 'nacos',
		'127.0.0.1', 'laokou-gateway', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'gateway配置', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (46, 'application-admin.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    ignore-tables:
      - boot_sys_tenant
      - boot_sys_source
      - boot_sys_package_menu
      - boot_sys_package
    enabled: true
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: false', '7270e14a875205fafe93949b552af527', '2024-05-25 18:13:10.69', '2024-06-29 14:13:14.802', 'nacos',
		'0:0:0:0:0:0:0:1', 'laokou-admin', '8140e92b-fb43-48f5-b63b-7506185206a5', '', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (31, 'application-sms.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
sms:
  gyy:
    enabled: true
    template-id: ENC(YpExkbRJjCJUNB9QWmqzSmJl9XJ2BMnw2KmxxQ5JPXbhB66Z9ARRPJ3o4cuZNcxDgaLsLB0Qnplvvagdn0XJN7iZOPSL7P8pg3iFIoS8RKE=)
    sign-id: ENC(anORfPoXwjam7f2azlNZAJbPfgmYUd6p8OVOyyNnTNgHNZPesJhYXE9mvqvpgHFSit3aNeIyBuJS6j1PSsFs6m0aJdL0NjvKNwPd2aGTLog=)
    appcode: ENC(Mlk2DvR7RwOjEj0EajZ+9cjHqHK9Qzkmti7U1r8/iVDj2bFOwoO1ZdwbaYon/1QivDL1hu4vvxFVNv56mVdqCQiPQrhPW3oIJRDd9sQBfWA=)',
		'3adcbf9b68966d16ac2136f236f2f919', '2024-05-25 18:13:10.588', '2024-07-16 21:50:44.322', 'nacos', '127.0.0.1',
		'laokou-sms', '8140e92b-fb43-48f5-b63b-7506185206a5', 'sms配置', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (32, 'application-mail.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
spring:
  # mail
  mail:
    host: smtp.qq.com
    username: 2413176044@qq.com
    password: ENC(A7pfP5nvz3Mmc/6Nc3ewvkcNv7AQyZz8qWri7Kn8GqW4vwPFmZt+Vaq0gjS8SS1767v2h0exWJbJpA2zsTtmVA==)
    default-encoding: UTF-8', '3e16e7d481fcc41559736dc5f7258251', '2024-05-25 18:13:10.594', '2024-07-16 21:52:24.67',
		'nacos', '127.0.0.1', 'laokou-mail', '8140e92b-fb43-48f5-b63b-7506185206a5', 'mail配置', '', '', 'yaml', '',
		'');
INSERT INTO "public"."config_info"
VALUES (19, 'application-monitor.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  boot:
    # admin
    admin:
      discovery:
        ignored-services:
          - laokou-im
      notify:
        mail:
          from: 2413176044@qq.com
          to: 2413176044@qq.com
          template: META-INF/spring-boot-admin-server/mail/status-changed.html
  # security
  security:
    user:
      # root
      name: ENC(esZnNM2DrSxZhgTOzu11W2fVsJDDZ1b12aPopMMHCS7lF5+BJun9ri6y5pTUdj6L)
      # laokou123
      password: ENC(mHjKcITM5U60bq7M4fxh4yUQ9L3PPWPskvnWRE0PVxIqQ34Ztx7zOESwWCdjeWPW)
  # mail
  mail:
    host: smtp.qq.com
    password: ENC(A7pfP5nvz3Mmc/6Nc3ewvkcNv7AQyZz8qWri7Kn8GqW4vwPFmZt+Vaq0gjS8SS1767v2h0exWJbJpA2zsTtmVA==)
    default-encoding: UTF-8
    username: 2413176044@qq.com

# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always', 'de1c37757329b0ad75488bf39024489c', '2024-05-25 18:12:47.335', '2024-05-25 18:13:33.308',
		NULL, '127.0.0.1', 'laokou-monitor', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'spring boot admin monitor', NULL,
		NULL, 'yaml', NULL, '');
INSERT INTO "public"."config_info"
VALUES (61, 'application-report.yaml', 'LAOKOU_GROUP', 'server:
  port: 8088', '89f7b26715cf760d099a258200381fe0', '2024-05-25 18:13:33.406', '2024-05-25 18:13:33.406', NULL,
		'127.0.0.1', 'laokou-report', '0dac1a68-2f01-40df-bd26-bf0cb199057a', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO "public"."config_info"
VALUES (58, 'router.json', 'LAOKOU_GROUP', '[
  {
    "id": "laokou-auth",
    "uri": "lb://laokou-auth",
    "predicates": [
      {
        "name": "Path",
        "args": {
          "pattern": "/auth/**"
        }
      },
      {
        "name": "Weight",
        "args": {
          "_genkey_0": "auth",
          "_genkey_1": "100"
        }
      }
    ],
    "filters": [
      {
        "name": "StripPrefix",
        "args": {
          "parts": "1"
        }
      },
      {
        "name": "RewritePath",
        "args": {
          "_genkey_0": "/auth/(?<path>.*)",
          "_genkey_1": "/$\\{path}"
        }
      }
    ],
    "metadata": {
      "version": "v3"
    },
    "order": 1
  },
  {
    "id": "laokou-admin",
    "uri": "lb://laokou-admin",
    "predicates": [
      {
        "name": "Path",
        "args": {
          "pattern": "/admin/**"
        }
      },
      {
        "name": "Weight",
        "args": {
          "_genkey_0": "admin",
          "_genkey_1": "100"
        }
      }
    ],
    "filters": [
      {
        "name": "StripPrefix",
        "args": {
          "parts": "1"
        }
      },
      {
        "name": "RewritePath",
        "args": {
          "_genkey_0": "/admin/(?<path>.*)",
          "_genkey_1": "/$\\{path}"
        }
      }
    ],
    "metadata": {
      "version": "v3"
    },
    "order": 1
  },
  {
    "id": "laokou-im",
    "uri": "lb:wss://laokou-im",
    "predicates": [
      {
        "name": "Path",
        "args": {
          "pattern": "/im/**"
        }
      },
      {
        "name": "Weight",
        "args": {
          "_genkey_0": "im",
          "_genkey_1": "100"
        }
      }
    ],
    "filters": [
      {
        "name": "StripPrefix",
        "args": {
          "parts": "1"
        }
      },
      {
        "name": "RewritePath",
        "args": {
          "_genkey_0": "/im/(?<path>.*)",
          "_genkey_1": "/$\\{path}"
        }
      }
    ],
    "metadata": {
      "version": "v3"
    },
    "order": 1
  }
]', '0ed5d74d692a46b070c46572b94ca61d', '2024-05-25 18:13:33.387', '2024-05-25 18:15:59.61', 'nacos', '127.0.0.1',
		'laokou-gateway', '0dac1a68-2f01-40df-bd26-bf0cb199057a', '动态路由配置', '', '', 'json', '', '');
INSERT INTO "public"."config_info"
VALUES (57, 'admin-flow.json', 'LAOKOU_GROUP', '[
  {
    "resource": "/v3/users/profile",
    "limitApp": "default",
    "count": 300,
    "grade": 1,
    "strategy": 0,
    "controlBehavior": 0
  }
]', '31d82f93a5909b2529f159848116e162', '2024-05-25 18:13:33.382', '2024-05-25 18:19:26.212', 'nacos', '127.0.0.1',
		'laokou-admin', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'admin sentinel flow rule', '', '', 'json', '', '');
INSERT INTO "public"."config_info"
VALUES (60, 'application-common-monitor.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  # https://codecentric.github.io/spring-boot-admin/current
  boot:
    # admin
    admin:
      client:
        url: http://monitor.laokou.org:5000
        # root
        username: ENC(esZnNM2DrSxZhgTOzu11W2fVsJDDZ1b12aPopMMHCS7lF5+BJun9ri6y5pTUdj6L)
        # laokou123
        password: ENC(mHjKcITM5U60bq7M4fxh4yUQ9L3PPWPskvnWRE0PVxIqQ34Ztx7zOESwWCdjeWPW)',
		'cd09a01f0564c89b652fe9db269795e9', '2024-05-25 18:13:33.4', '2024-05-25 18:47:54.592', 'nacos', '127.0.0.1',
		'', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'monitor公共配置', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (59, 'application-common.yaml', 'LAOKOU_GROUP', '# spring
spring:
  # security
  security:
    oauth2:
      resource-server:
        enabled: true
        request-matcher:
          ignore-patterns:
            GET:
              - /**/v3/api-docs/**=laokou-gateway
              - /v3/api-docs/**=laokou-auth,laokou-admin
              - /swagger-ui.html=laokou-admin,laokou-gateway,laokou-auth
              - /swagger-ui/**=laokou-admin,laokou-gateway,laokou-auth
              - /actuator/**=laokou-admin,laokou-gateway,laokou-auth
              - /error=laokou-admin,laokou-auth
              - /v3/tenants/options=laokou-auth,laokou-gateway
              - /v3/tenants/id=laokou-auth,laokou-gateway
              - /favicon.ico=laokou-gateway
              - /v3/captchas/{uuid}=laokou-gateway,laokou-auth
              - /v3/secrets=laokou-gateway,laokou-auth
              - /graceful-shutdown=laokou-auth
              - /ws=laokou-gateway
              - /doc.html=laokou-gateway
            POST:
              - /v3/captchas=laokou-auth,laokou-gateway
            DELETE:
              - /v3/logouts=laokou-auth,laokou-gateway
  # task
  task-execution:
    thread-name-prefix: laokou-ttl-task-
    pool:
      core-size: 33
      keep-alive: 180s
    fork-join-pool:
      core-size: 33
  cloud:
    # 解决集成sentinel，openfeign启动报错，官方下个版本修复
    openfeign:
      compression:
        response:
          enabled: true
        request:
          enabled: true
      # FeignAutoConfiguration、OkHttpFeignLoadBalancerConfiguration、OkHttpClient#getClient、FeignClientProperties、OptionsFactoryBean#getObject
      # 在BeanFactory调用getBean()时，不是调用getBean，是调用getObject(),因此，getObject()相当于代理了getBean(),而且getObject()对Options初始化，是直接从openfeign.default获取配置值的
      okhttp:
        enabled: true
      circuitbreaker:
        enabled: true
      httpclient:
        enabled: false
        hc5:
          enabled: false
        disable-ssl-validation: true
      client:
        config:
          default:
            connectTimeout: 120000 #连接超时
            readTimeout: 120000 #读取超时
            logger-level: full
      lazy-attributes-resolution: true
    # sentinel
    sentinel:
      eager: true #开启饥饿加载，直接初始化
      transport:
        port: 8769
        dashboard: sentinel.laokou.org:8972
# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# server
server:
  servlet:
    encoding:
      charset: UTF-8
  undertow:
    threads:
      # 设置IO线程数，来执行非阻塞任务，负责多个连接数
      io: 16
      # 工作线程数
      worker: 256
    # 每块buffer的空间大小
    buffer-size: 1024
    # 分配堆外内存
    direct-buffers: true

# feign
feign:
  sentinel:
    enabled: true
    default-rule: default
    rules:
      # https://sentinelguard.io/zh-cn/docs/circuit-breaking.html
      default:
        - grade: 2 # 异常数策略
          count: 1 # 异常数模式下为对应的阈值
          timeWindow: 30 # 熔断时长，单位为 s（经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。ERROR_COUNT）
          statIntervalMs: 1000 # 统计时长（单位为 ms），如 60*1000 代表分钟级（1.8.0 引入）
          minRequestAmount: 5 # 熔断触发的最小请求数，请求数小于该值时即使异常比率超出阈值也不会熔断
tenant:
  domain-names:
    - laokou.org
    - laokouyun.org
    - laokou.org.cn

springdoc:
  swagger-ui:
    path: /swagger-ui.html', 'e83a99587ac917866dee016df29fd662', '2024-05-25 18:13:33.393', '2024-05-26 00:02:51.42',
		'nacos', '127.0.0.1', '', '0dac1a68-2f01-40df-bd26-bf0cb199057a', '', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (62, 'application-common-kafka.yaml', 'LAOKOU_GROUP', 'spring:
  kafka:
    bootstrap-servers: kafka.laokou.org:9092
    consumer:
      # 禁用自动提交（按周期）已消费offset
      enable-auto-commit: false
      # 单次poll()调用返回的记录数
      max-poll-records: 50
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      # 发生错误后，消息重发的次数。
      retries: 5
      #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 16384
      # 设置生产者内存缓冲区的大小。
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 0
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      # listner负责ack，每调用一次，就立即commit
      ack-mode: manual
      # 批量batch类型
      type: batch
      # topic不存在报错
      missing-topics-fatal: false', '157c7aaa53329ababa1aab96b9878fad', '2024-05-25 18:13:33.413',
		'2024-05-25 18:13:33.413', NULL, '127.0.0.1', '', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'kafka公共配置', NULL,
		NULL, 'yaml', NULL, '');
INSERT INTO "public"."config_info"
VALUES (63, 'application-logstash.yaml', 'LAOKOU_GROUP', 'spring:
  xxl-job:
    admin:
      address: http://xxl.job.laokou.org:9095/xxl-job-admin
    executor:
      app-name: laokou-logstash
      port: -1
      log-path: ./logs/xxl-job/laokou-logstash
      access-token: yRagfkAddGXdTySYTFzhvMguinulMIMSCcXUbljWDhe
      intentionalities: 7', '81c3de6319db8560c68935977f2d141f', '2024-05-25 18:13:33.419', '2024-05-25 18:13:33.419',
		NULL, '127.0.0.1', 'laokou-logstash', '0dac1a68-2f01-40df-bd26-bf0cb199057a', '', NULL, NULL, 'yaml', NULL, '');

INSERT INTO "public"."config_info"
VALUES (66, 'admin-degrade.json', 'LAOKOU_GROUP', '[
  {
    "resource": "POST:https://laokou-flowable/work/task/api/query",
    "count": 200,
    "grade": 0,
    "slowRatioThreshold": 0.1,
    "minRequestAmount": 5,
    "timeWindow": 30
  },
  {
    "resource": "POST:https://laokou-flowable/work/definition/api/query",
    "count": 200,
    "grade": 0,
    "slowRatioThreshold": 0.1,
    "minRequestAmount": 5,
    "timeWindow": 30
  }
]', '2c0d4de0716f94bd6878b0a68d3faa0f', '2024-05-25 18:13:33.436', '2024-05-25 18:13:33.436', NULL, '127.0.0.1',
		'laokou-admin', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'admin sentinel degrade rule', NULL, NULL, 'json', NULL,
		'');

INSERT INTO "public"."config_info"
VALUES (68, 'application-admin.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    ignore-tables:
      - boot_sys_tenant
      - boot_sys_source
      - boot_sys_package_menu
      - boot_sys_package
    enabled: true
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: true', 'ef43225dfe22aafd066a2f8a86fcbde5', '2024-05-25 18:13:33.447', '2024-06-29 14:14:10.129', 'nacos',
		'0:0:0:0:0:0:0:1', 'laokou-admin', '0dac1a68-2f01-40df-bd26-bf0cb199057a', '', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (2022, 'application-admin.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    ignore-tables:
      - boot_sys_tenant
      - boot_sys_source
      - boot_sys_package_menu
      - boot_sys_package
    enabled: true
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: true', 'ef43225dfe22aafd066a2f8a86fcbde5', '2023-09-28 11:37:33', '2024-06-29 14:12:17.779', 'nacos',
		'0:0:0:0:0:0:0:1', 'laokou-admin', 'a61abd4c-ef96-42a5-99a1-616adee531f3', '', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (69, 'application-auth.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 60000
            validation-timeout: 3000
            idle-timeout: 60000
            max-lifetime: 60000
            maximum-pool-size: 30
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
    ignore-tables:
      - boot_sys_source
      - boot_sys_tenant
      - boot_domain_event
      - boot_sys_user
      - boot_sys_menu
      - boot_sys_dept
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: true', '10abe61bed146c004291a5e8204280ca', '2024-05-25 18:13:33.452', '2024-07-16 21:48:52.435', 'nacos',
		'127.0.0.1', 'laokou-auth', '0dac1a68-2f01-40df-bd26-bf0cb199057a', '', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (2025, 'application-auth.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 60000
            validation-timeout: 3000
            idle-timeout: 60000
            max-lifetime: 60000
            maximum-pool-size: 30
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
    ignore-tables:
      - boot_sys_source
      - boot_sys_tenant
      - boot_domain_event
      - boot_sys_user
      - boot_sys_menu
      - boot_sys_dept
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: true', '10abe61bed146c004291a5e8204280ca', '2023-09-28 11:51:44', '2024-07-16 21:47:50.072', 'nacos',
		'127.0.0.1', 'laokou-auth', 'a61abd4c-ef96-42a5-99a1-616adee531f3', '', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (47, 'application-auth.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 60000
            validation-timeout: 3000
            idle-timeout: 60000
            max-lifetime: 60000
            maximum-pool-size: 30
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
    ignore-tables:
      - boot_sys_source
      - boot_sys_tenant
      - boot_domain_event
      - boot_sys_user
      - boot_sys_menu
      - boot_sys_dept
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: false', 'efc1ae262968e3fe57290083641e4577', '2024-05-25 18:13:10.697', '2024-07-16 21:48:26.726', 'nacos',
		'127.0.0.1', 'laokou-auth', '8140e92b-fb43-48f5-b63b-7506185206a5', '', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (1475, 'application-sms.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
sms:
  gyy:
    enabled: true
    template-id: ENC(YpExkbRJjCJUNB9QWmqzSmJl9XJ2BMnw2KmxxQ5JPXbhB66Z9ARRPJ3o4cuZNcxDgaLsLB0Qnplvvagdn0XJN7iZOPSL7P8pg3iFIoS8RKE=)
    sign-id: ENC(anORfPoXwjam7f2azlNZAJbPfgmYUd6p8OVOyyNnTNgHNZPesJhYXE9mvqvpgHFSit3aNeIyBuJS6j1PSsFs6m0aJdL0NjvKNwPd2aGTLog=)
    appcode: ENC(Mlk2DvR7RwOjEj0EajZ+9cjHqHK9Qzkmti7U1r8/iVDj2bFOwoO1ZdwbaYon/1QivDL1hu4vvxFVNv56mVdqCQiPQrhPW3oIJRDd9sQBfWA=)',
		'3adcbf9b68966d16ac2136f236f2f919', '2023-02-13 19:59:35', '2024-07-16 21:50:25.922', 'nacos', '127.0.0.1',
		'laokou-sms', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'sms配置', '', '', 'yaml', '', '');
INSERT INTO "public"."config_info"
VALUES (22, 'application-sms.yaml', 'LAOKOU_GROUP', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
sms:
  gyy:
    enabled: true
    template-id: ENC(YpExkbRJjCJUNB9QWmqzSmJl9XJ2BMnw2KmxxQ5JPXbhB66Z9ARRPJ3o4cuZNcxDgaLsLB0Qnplvvagdn0XJN7iZOPSL7P8pg3iFIoS8RKE=)
    sign-id: ENC(anORfPoXwjam7f2azlNZAJbPfgmYUd6p8OVOyyNnTNgHNZPesJhYXE9mvqvpgHFSit3aNeIyBuJS6j1PSsFs6m0aJdL0NjvKNwPd2aGTLog=)
    appcode: ENC(Mlk2DvR7RwOjEj0EajZ+9cjHqHK9Qzkmti7U1r8/iVDj2bFOwoO1ZdwbaYon/1QivDL1hu4vvxFVNv56mVdqCQiPQrhPW3oIJRDd9sQBfWA=)',
		'3adcbf9b68966d16ac2136f236f2f919', '2024-05-25 18:12:47.349', '2024-07-16 21:51:04.709', 'nacos', '127.0.0.1',
		'laokou-sms', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'sms配置', '', '', 'yaml', '', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS "public"."config_info_aggr";
CREATE TABLE "public"."config_info_aggr"
(
	"id"           int8                                        NOT NULL GENERATED BY DEFAULT AS IDENTITY (
		INCREMENT 1
		MINVALUE 1
		MAXVALUE 9223372036854775807
		START 1
		CACHE 1
		),
	"data_id"      varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
	"group_id"     varchar(128) COLLATE "pg_catalog"."default" NOT NULL,
	"datum_id"     varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
	"content"      text COLLATE "pg_catalog"."default"         NOT NULL,
	"gmt_modified" timestamp(6)                                NOT NULL,
	"app_name"     varchar(128) COLLATE "pg_catalog"."default",
	"tenant_id"    varchar(128) COLLATE "pg_catalog"."default" DEFAULT ''::character varying
)
;
COMMENT ON COLUMN "public"."config_info_aggr"."id" IS 'id';
COMMENT ON COLUMN "public"."config_info_aggr"."data_id" IS 'data_id';
COMMENT ON COLUMN "public"."config_info_aggr"."group_id" IS 'group_id';
COMMENT ON COLUMN "public"."config_info_aggr"."datum_id" IS 'datum_id';
COMMENT ON COLUMN "public"."config_info_aggr"."content" IS '内容';
COMMENT ON COLUMN "public"."config_info_aggr"."gmt_modified" IS '修改时间';
COMMENT ON COLUMN "public"."config_info_aggr"."tenant_id" IS '租户字段';
COMMENT ON TABLE "public"."config_info_aggr" IS '增加租户字段';

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS "public"."config_info_beta";
CREATE TABLE "public"."config_info_beta"
(
	"id"                 int8                                        NOT NULL GENERATED BY DEFAULT AS IDENTITY (
		INCREMENT 1
		MINVALUE 1
		MAXVALUE 9223372036854775807
		START 1
		CACHE 1
		),
	"data_id"            varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
	"group_id"           varchar(128) COLLATE "pg_catalog"."default" NOT NULL,
	"app_name"           varchar(128) COLLATE "pg_catalog"."default",
	"content"            text COLLATE "pg_catalog"."default"         NOT NULL,
	"beta_ips"           varchar(1024) COLLATE "pg_catalog"."default",
	"md5"                varchar(32) COLLATE "pg_catalog"."default",
	"gmt_create"         timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"gmt_modified"       timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"src_user"           text COLLATE "pg_catalog"."default",
	"src_ip"             varchar(50) COLLATE "pg_catalog"."default",
	"tenant_id"          varchar(128) COLLATE "pg_catalog"."default"          DEFAULT ''::character varying,
	"encrypted_data_key" text COLLATE "pg_catalog"."default"         NOT NULL
)
;
COMMENT ON COLUMN "public"."config_info_beta"."id" IS 'id';
COMMENT ON COLUMN "public"."config_info_beta"."data_id" IS 'data_id';
COMMENT ON COLUMN "public"."config_info_beta"."group_id" IS 'group_id';
COMMENT ON COLUMN "public"."config_info_beta"."app_name" IS 'app_name';
COMMENT ON COLUMN "public"."config_info_beta"."content" IS 'content';
COMMENT ON COLUMN "public"."config_info_beta"."beta_ips" IS 'betaIps';
COMMENT ON COLUMN "public"."config_info_beta"."md5" IS 'md5';
COMMENT ON COLUMN "public"."config_info_beta"."gmt_create" IS '创建时间';
COMMENT ON COLUMN "public"."config_info_beta"."gmt_modified" IS '修改时间';
COMMENT ON COLUMN "public"."config_info_beta"."src_user" IS 'source user';
COMMENT ON COLUMN "public"."config_info_beta"."src_ip" IS 'source ip';
COMMENT ON COLUMN "public"."config_info_beta"."tenant_id" IS '租户字段';
COMMENT ON COLUMN "public"."config_info_beta"."encrypted_data_key" IS '秘钥';
COMMENT ON TABLE "public"."config_info_beta" IS 'config_info_beta';

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS "public"."config_info_tag";
CREATE TABLE "public"."config_info_tag"
(
	"id"           int8                                        NOT NULL GENERATED BY DEFAULT AS IDENTITY (
		INCREMENT 1
		MINVALUE 1
		MAXVALUE 9223372036854775807
		START 1
		CACHE 1
		),
	"data_id"      varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
	"group_id"     varchar(128) COLLATE "pg_catalog"."default" NOT NULL,
	"tenant_id"    varchar(128) COLLATE "pg_catalog"."default"          DEFAULT ''::character varying,
	"tag_id"       varchar(128) COLLATE "pg_catalog"."default" NOT NULL,
	"app_name"     varchar(128) COLLATE "pg_catalog"."default",
	"content"      text COLLATE "pg_catalog"."default"         NOT NULL,
	"md5"          varchar(32) COLLATE "pg_catalog"."default",
	"gmt_create"   timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"gmt_modified" timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"src_user"     text COLLATE "pg_catalog"."default",
	"src_ip"       varchar(50) COLLATE "pg_catalog"."default"
)
;
COMMENT ON COLUMN "public"."config_info_tag"."id" IS 'id';
COMMENT ON COLUMN "public"."config_info_tag"."data_id" IS 'data_id';
COMMENT ON COLUMN "public"."config_info_tag"."group_id" IS 'group_id';
COMMENT ON COLUMN "public"."config_info_tag"."tenant_id" IS 'tenant_id';
COMMENT ON COLUMN "public"."config_info_tag"."tag_id" IS 'tag_id';
COMMENT ON COLUMN "public"."config_info_tag"."app_name" IS 'app_name';
COMMENT ON COLUMN "public"."config_info_tag"."content" IS 'content';
COMMENT ON COLUMN "public"."config_info_tag"."md5" IS 'md5';
COMMENT ON COLUMN "public"."config_info_tag"."gmt_create" IS '创建时间';
COMMENT ON COLUMN "public"."config_info_tag"."gmt_modified" IS '修改时间';
COMMENT ON COLUMN "public"."config_info_tag"."src_user" IS 'source user';
COMMENT ON COLUMN "public"."config_info_tag"."src_ip" IS 'source ip';
COMMENT ON TABLE "public"."config_info_tag" IS 'config_info_tag';

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS "public"."config_tags_relation";
CREATE TABLE "public"."config_tags_relation"
(
	"id"        int8                                        NOT NULL,
	"tag_name"  varchar(128) COLLATE "pg_catalog"."default" NOT NULL,
	"tag_type"  varchar(64) COLLATE "pg_catalog"."default",
	"data_id"   varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
	"group_id"  varchar(128) COLLATE "pg_catalog"."default" NOT NULL,
	"tenant_id" varchar(128) COLLATE "pg_catalog"."default" DEFAULT ''::character varying,
	"nid"       int8                                        NOT NULL GENERATED BY DEFAULT AS IDENTITY (
		INCREMENT 1
		MINVALUE 1
		MAXVALUE 9223372036854775807
		START 1
		CACHE 1
		)
)
;
COMMENT ON COLUMN "public"."config_tags_relation"."id" IS 'id';
COMMENT ON COLUMN "public"."config_tags_relation"."tag_name" IS 'tag_name';
COMMENT ON COLUMN "public"."config_tags_relation"."tag_type" IS 'tag_type';
COMMENT ON COLUMN "public"."config_tags_relation"."data_id" IS 'data_id';
COMMENT ON COLUMN "public"."config_tags_relation"."group_id" IS 'group_id';
COMMENT ON COLUMN "public"."config_tags_relation"."tenant_id" IS 'tenant_id';
COMMENT ON TABLE "public"."config_tags_relation" IS 'config_tag_relation';

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------
INSERT INTO "public"."config_tags_relation"
VALUES (1567, 'gateway', '', 'gateway-flow.json', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 358);
INSERT INTO "public"."config_tags_relation"
VALUES (82, 'monitor', '', 'application-monitor.yaml', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 469);
INSERT INTO "public"."config_tags_relation"
VALUES (16, 'redis', '', 'application-common-redis.yaml', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 672);
INSERT INTO "public"."config_tags_relation"
VALUES (1270, 'rocketmq', '', 'application-common-rocketmq.yaml', 'LAOKOU_GROUP',
		'a61abd4c-ef96-42a5-99a1-616adee531f3', 678);
INSERT INTO "public"."config_tags_relation"
VALUES (2159, 'kafka', '', 'application-common-kafka.yaml', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3',
		684);
INSERT INTO "public"."config_tags_relation"
VALUES (2178, 'logstash', '', 'application-logstash.yaml', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 685);
INSERT INTO "public"."config_tags_relation"
VALUES (103, 'elasticsearch', '', 'application-common-elasticsearch.yaml', 'LAOKOU_GROUP',
		'a61abd4c-ef96-42a5-99a1-616adee531f3', 689);
INSERT INTO "public"."config_tags_relation"
VALUES (2118, 'report', '', 'application-report.yaml', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 720);
INSERT INTO "public"."config_tags_relation"
VALUES (1570, 'admin', '', 'admin-degrade.json', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 4);

INSERT INTO "public"."config_tags_relation"
VALUES (26, 'gateway', '', 'router.json', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 54);
INSERT INTO "public"."config_tags_relation"
VALUES (1273, 'gateway', '', 'application-gateway.yaml', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 55);
INSERT INTO "public"."config_tags_relation"
VALUES (2022, 'admin', '', 'application-admin.yaml', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 57);
INSERT INTO "public"."config_tags_relation"
VALUES (17, 'common', '', 'application-common.yaml', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 60);
INSERT INTO "public"."config_tags_relation"
VALUES (2025, 'auth', '', 'application-auth.yaml', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 3);
INSERT INTO "public"."config_tags_relation"
VALUES (1475, 'sms', '', 'application-sms.yaml', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 5);
INSERT INTO "public"."config_tags_relation"
VALUES (1477, 'mail', '', 'application-mail.yaml', 'LAOKOU_GROUP', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 6);

-- ----------------------------
-- Table structure for databasechangelog
-- ----------------------------
DROP TABLE IF EXISTS "public"."databasechangelog";
CREATE TABLE "public"."databasechangelog"
(
	"id"            varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
	"author"        varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
	"filename"      varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
	"dateexecuted"  timestamp(6)                                NOT NULL,
	"orderexecuted" int4                                        NOT NULL,
	"exectype"      varchar(10) COLLATE "pg_catalog"."default"  NOT NULL,
	"md5sum"        varchar(35) COLLATE "pg_catalog"."default",
	"description"   varchar(255) COLLATE "pg_catalog"."default",
	"comments"      varchar(255) COLLATE "pg_catalog"."default",
	"tag"           varchar(255) COLLATE "pg_catalog"."default",
	"liquibase"     varchar(20) COLLATE "pg_catalog"."default",
	"contexts"      varchar(255) COLLATE "pg_catalog"."default",
	"labels"        varchar(255) COLLATE "pg_catalog"."default",
	"deployment_id" varchar(10) COLLATE "pg_catalog"."default"
)
;

-- ----------------------------
-- Records of databasechangelog
-- ----------------------------

-- ----------------------------
-- Table structure for databasechangeloglock
-- ----------------------------
DROP TABLE IF EXISTS "public"."databasechangeloglock";
CREATE TABLE "public"."databasechangeloglock"
(
	"id"          int4 NOT NULL,
	"locked"      bool NOT NULL,
	"lockgranted" timestamp(6),
	"lockedby"    varchar(255) COLLATE "pg_catalog"."default"
)
;

-- ----------------------------
-- Records of databasechangeloglock
-- ----------------------------
INSERT INTO "public"."databasechangeloglock"
VALUES (1, 'f', NULL, NULL);

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS "public"."group_capacity";
CREATE TABLE "public"."group_capacity"
(
	"id"                int8                                        NOT NULL GENERATED BY DEFAULT AS IDENTITY (
		INCREMENT 1
		MINVALUE 1
		MAXVALUE 9223372036854775807
		START 1
		CACHE 1
		),
	"group_id"          varchar(128) COLLATE "pg_catalog"."default" NOT NULL DEFAULT ''::character varying,
	"quota"             int8                                        NOT NULL DEFAULT 0,
	"usage"             int8                                        NOT NULL DEFAULT 0,
	"max_size"          int8                                        NOT NULL DEFAULT 0,
	"max_aggr_count"    int8                                        NOT NULL DEFAULT 0,
	"max_aggr_size"     int8                                        NOT NULL DEFAULT 0,
	"max_history_count" int8                                        NOT NULL DEFAULT 0,
	"gmt_create"        timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"gmt_modified"      timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP
)
;
COMMENT ON COLUMN "public"."group_capacity"."id" IS '主键ID';
COMMENT ON COLUMN "public"."group_capacity"."group_id" IS 'Group ID，空字符表示整个集群';
COMMENT ON COLUMN "public"."group_capacity"."quota" IS '配额，0表示使用默认值';
COMMENT ON COLUMN "public"."group_capacity"."usage" IS '使用量';
COMMENT ON COLUMN "public"."group_capacity"."max_size" IS '单个配置大小上限，单位为字节，0表示使用默认值';
COMMENT ON COLUMN "public"."group_capacity"."max_aggr_count" IS '聚合子配置最大个数，，0表示使用默认值';
COMMENT ON COLUMN "public"."group_capacity"."max_aggr_size" IS '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值';
COMMENT ON COLUMN "public"."group_capacity"."max_history_count" IS '最大变更历史数量';
COMMENT ON COLUMN "public"."group_capacity"."gmt_create" IS '创建时间';
COMMENT ON COLUMN "public"."group_capacity"."gmt_modified" IS '修改时间';
COMMENT ON TABLE "public"."group_capacity" IS '集群、各Group容量信息表';

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS "public"."his_config_info";
CREATE TABLE "public"."his_config_info"
(
	"id"                 int8                                        NOT NULL,
	"nid"                int8                                        NOT NULL GENERATED BY DEFAULT AS IDENTITY (
		INCREMENT 1
		MINVALUE 1
		MAXVALUE 9223372036854775807
		START 1
		CACHE 1
		),
	"data_id"            varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
	"group_id"           varchar(128) COLLATE "pg_catalog"."default" NOT NULL,
	"app_name"           varchar(128) COLLATE "pg_catalog"."default",
	"content"            text COLLATE "pg_catalog"."default"         NOT NULL,
	"md5"                varchar(32) COLLATE "pg_catalog"."default",
	"gmt_create"         timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"gmt_modified"       timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"src_user"           text COLLATE "pg_catalog"."default",
	"src_ip"             varchar(50) COLLATE "pg_catalog"."default",
	"op_type"            char(10) COLLATE "pg_catalog"."default",
	"tenant_id"          varchar(128) COLLATE "pg_catalog"."default"          DEFAULT ''::character varying,
	"encrypted_data_key" text COLLATE "pg_catalog"."default"         NOT NULL
)
;
COMMENT ON COLUMN "public"."his_config_info"."app_name" IS 'app_name';
COMMENT ON COLUMN "public"."his_config_info"."tenant_id" IS '租户字段';
COMMENT ON COLUMN "public"."his_config_info"."encrypted_data_key" IS '秘钥';
COMMENT ON TABLE "public"."his_config_info" IS '多租户改造';

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO "public"."his_config_info"
VALUES (2025, 1, 'application-auth.yaml', 'LAOKOU_GROUP', 'laokou-auth', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 60000
            validation-timeout: 3000
            idle-timeout: 60000
            max-lifetime: 60000
            maximum-pool-size: 30
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
    ignore-tables:
      - boot_sys_source
      - boot_sys_tenant
      - boot_domain_event
	  - boot_sys_user
	  - boot_sys_menu
	  - boot_sys_dept
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: true', 'cc6da796e35e2f5453568cf8fc213655', '2024-07-16 21:46:15.561251', '2024-07-16 21:46:15.566',
		'nacos', '127.0.0.1', 'U         ', 'a61abd4c-ef96-42a5-99a1-616adee531f3', '');
INSERT INTO "public"."his_config_info"
VALUES (2025, 2, 'application-auth.yaml', 'LAOKOU_GROUP', 'laokou-auth', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 60000
            validation-timeout: 3000
            idle-timeout: 60000
            max-lifetime: 60000
            maximum-pool-size: 30
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
    ignore-tables:
      - boot_sys_source
      - boot_sys_tenant
      - boot_domain_event
	  - boot_sys_user
	  - boot_sys_menu
	  - boot_sys_dept
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: true', 'cc6da796e35e2f5453568cf8fc213655', '2024-07-16 21:47:36.074497', '2024-07-16 21:47:36.078',
		'nacos', '127.0.0.1', 'U         ', 'a61abd4c-ef96-42a5-99a1-616adee531f3', '');
INSERT INTO "public"."his_config_info"
VALUES (2025, 3, 'application-auth.yaml', 'LAOKOU_GROUP', 'laokou-auth', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 60000
            validation-timeout: 3000
            idle-timeout: 60000
            max-lifetime: 60000
            maximum-pool-size: 30
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
    ignore-tables:
      - boot_sys_source
      - boot_sys_tenant
      - boot_domain_event
	    - boot_sys_user
	    - boot_sys_menu
	    - boot_sys_dept
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: true', '4bf564f759d4ee4c6d788fd5eebbd519', '2024-07-16 21:47:50.07215', '2024-07-16 21:47:50.075', 'nacos',
		'127.0.0.1', 'U         ', 'a61abd4c-ef96-42a5-99a1-616adee531f3', '');
INSERT INTO "public"."his_config_info"
VALUES (47, 4, 'application-auth.yaml', 'LAOKOU_GROUP', 'laokou-auth', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 60000
            validation-timeout: 3000
            idle-timeout: 60000
            max-lifetime: 60000
            maximum-pool-size: 30
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
    ignore-tables:
      - boot_sys_source
      - boot_sys_tenant
      - boot_domain_event
	  - boot_sys_user
	  - boot_sys_menu
	  - boot_sys_dept
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: false', '0069c2c95c7d8819768e7d53dec6c9cc', '2024-07-16 21:48:09.879648', '2024-07-16 21:48:09.882',
		'nacos', '127.0.0.1', 'U         ', '8140e92b-fb43-48f5-b63b-7506185206a5', '');
INSERT INTO "public"."his_config_info"
VALUES (47, 5, 'application-auth.yaml', 'LAOKOU_GROUP', 'laokou-auth', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 60000
            validation-timeout: 3000
            idle-timeout: 60000
            max-lifetime: 60000
            maximum-pool-size: 30
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
    ignore-tables:
      - boot_sys_source
      - boot_sys_tenant
      - boot_domain_event
	    - boot_sys_user
	    - boot_sys_menu
	    - boot_sys_dept
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: false', '448c282f677441ecbb4d84ac957c4087', '2024-07-16 21:48:26.725416', '2024-07-16 21:48:26.727',
		'nacos', '127.0.0.1', 'U         ', '8140e92b-fb43-48f5-b63b-7506185206a5', '');
INSERT INTO "public"."his_config_info"
VALUES (69, 6, 'application-auth.yaml', 'LAOKOU_GROUP', 'laokou-auth', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua

# spring
spring:
  datasource:
    dynamic:
      # 默认false,建议线上关闭
      p6spy: false
      #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源
      strict: true
      datasource:
        master:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            connection-timeout: 60000
            validation-timeout: 3000
            idle-timeout: 60000
            max-lifetime: 60000
            maximum-pool-size: 30
            minimum-idle: 10
            is-read-only: false
        domain:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://postgresql.laokou.org:5432/kcloud_platform_domain?tcpKeepAlive=true&reWriteBatchedInserts=true&stringtype=unspecified&ApplicationName=laokou-register&useSSL=false&reWriteBatchedInserts=true&stringtype=unspecified
          username: ENC(OuDQnY2CK0z2t+sq1ihFaFHWve1KjJoRo1aPyAghuRAf9ad3BO6AjcJRA+1b/nZw)
          password: ENC(XVR9OF604T3+2BINpvvCohjr7/KM/vuP3ZgYpu+FX/h3uogFI3sh26h8wHPBE+rj)
          # https://blog.csdn.net/u014644574/article/details/123680515
          hikari:
            pool-name: HikariCP
            connection-timeout: 180000
            validation-timeout: 3000
            idle-timeout: 180000
            max-lifetime: 1800000
            maximum-pool-size: 60
            minimum-idle: 10
            is-read-only: false
# mybatis-plus
mybatis-plus:
  # 全局处理
  global-config:
    db-config:
      column-format: "\"%s\""
  tenant:
    enabled: true
    ignore-tables:
      - boot_sys_source
      - boot_sys_tenant
	  - boot_domain_event
      - boot_sys_user
	  - boot_sys_menu
	  - boot_sys_dept
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

springdoc:
  api-docs:
    enabled: true', '4d88f2658025b7986a0ce911854d7465', '2024-07-16 21:48:52.434581', '2024-07-16 21:48:52.436',
		'nacos', '127.0.0.1', 'U         ', '0dac1a68-2f01-40df-bd26-bf0cb199057a', '');
INSERT INTO "public"."his_config_info"
VALUES (1475, 7, 'application-sms.yaml', 'LAOKOU_GROUP', 'laokou-sms', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
sms:
  gyy:
	enabled: true
    template-id: ENC(YpExkbRJjCJUNB9QWmqzSmJl9XJ2BMnw2KmxxQ5JPXbhB66Z9ARRPJ3o4cuZNcxDgaLsLB0Qnplvvagdn0XJN7iZOPSL7P8pg3iFIoS8RKE=)
    sign-id: ENC(anORfPoXwjam7f2azlNZAJbPfgmYUd6p8OVOyyNnTNgHNZPesJhYXE9mvqvpgHFSit3aNeIyBuJS6j1PSsFs6m0aJdL0NjvKNwPd2aGTLog=)
    appcode: ENC(Mlk2DvR7RwOjEj0EajZ+9cjHqHK9Qzkmti7U1r8/iVDj2bFOwoO1ZdwbaYon/1QivDL1hu4vvxFVNv56mVdqCQiPQrhPW3oIJRDd9sQBfWA=)',
		'b995cc92ea19b27e1342da1d41b921be', '2024-07-16 21:50:25.921746', '2024-07-16 21:50:25.926', 'nacos',
		'127.0.0.1', 'U         ', 'a61abd4c-ef96-42a5-99a1-616adee531f3', '');
INSERT INTO "public"."his_config_info"
VALUES (31, 8, 'application-sms.yaml', 'LAOKOU_GROUP', 'laokou-sms', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
sms:
  gyy:
    enabled: true
    template-id: ENC(YpExkbRJjCJUNB9QWmqzSmJl9XJ2BMnw2KmxxQ5JPXbhB66Z9ARRPJ3o4cuZNcxDgaLsLB0Qnplvvagdn0XJN7iZOPSL7P8pg3iFIoS8RKE=)
    sign-id: ENC(anORfPoXwjam7f2azlNZAJbPfgmYUd6p8OVOyyNnTNgHNZPesJhYXE9mvqvpgHFSit3aNeIyBuJS6j1PSsFs6m0aJdL0NjvKNwPd2aGTLog=)
    appcode: ENC(Mlk2DvR7RwOjEj0EajZ+9cjHqHK9Qzkmti7U1r8/iVDj2bFOwoO1ZdwbaYon/1QivDL1hu4vvxFVNv56mVdqCQiPQrhPW3oIJRDd9sQBfWA=)',
		'3adcbf9b68966d16ac2136f236f2f919', '2024-07-16 21:50:44.321948', '2024-07-16 21:50:44.323', 'nacos',
		'127.0.0.1', 'U         ', '8140e92b-fb43-48f5-b63b-7506185206a5', '');
INSERT INTO "public"."his_config_info"
VALUES (22, 9, 'application-sms.yaml', 'LAOKOU_GROUP', 'laokou-sms', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
sms:
  gyy:
	enabled: true
    template-id: ENC(YpExkbRJjCJUNB9QWmqzSmJl9XJ2BMnw2KmxxQ5JPXbhB66Z9ARRPJ3o4cuZNcxDgaLsLB0Qnplvvagdn0XJN7iZOPSL7P8pg3iFIoS8RKE=)
    sign-id: ENC(anORfPoXwjam7f2azlNZAJbPfgmYUd6p8OVOyyNnTNgHNZPesJhYXE9mvqvpgHFSit3aNeIyBuJS6j1PSsFs6m0aJdL0NjvKNwPd2aGTLog=)
    appcode: ENC(Mlk2DvR7RwOjEj0EajZ+9cjHqHK9Qzkmti7U1r8/iVDj2bFOwoO1ZdwbaYon/1QivDL1hu4vvxFVNv56mVdqCQiPQrhPW3oIJRDd9sQBfWA=)',
		'b995cc92ea19b27e1342da1d41b921be', '2024-07-16 21:51:04.70854', '2024-07-16 21:51:04.71', 'nacos', '127.0.0.1',
		'U         ', '0dac1a68-2f01-40df-bd26-bf0cb199057a', '');
INSERT INTO "public"."his_config_info"
VALUES (23, 10, 'application-mail.yaml', 'LAOKOU_GROUP', 'laokou-mail', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
spring:
  # mail
  mail:
    host: smtp.qq.com
    username: 2413176044@qq.com
    password: ENC(A7pfP5nvz3Mmc/6Nc3ewvkcNv7AQyZz8qWri7Kn8GqW4vwPFmZt+Vaq0gjS8SS1767v2h0exWJbJpA2zsTtmVA==)
    default-encoding: UTF-8', '3e16e7d481fcc41559736dc5f7258251', '2024-07-16 21:51:27.173699',
		'2024-07-16 21:51:27.175', 'nacos', '127.0.0.1', 'U         ', '0dac1a68-2f01-40df-bd26-bf0cb199057a', '');
INSERT INTO "public"."his_config_info"
VALUES (32, 11, 'application-mail.yaml', 'LAOKOU_GROUP', 'laokou-mail', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
spring:
  # mail
  mail:
    host: smtp.qq.com
    username: 2413176044@qq.com
    password: hhqkeodvfywfebaf
    default-encoding: UTF-8', 'b933d73af97a47df7b93af80b8bc4227', '2024-07-16 21:51:46.861634',
		'2024-07-16 21:51:46.864', 'nacos', '127.0.0.1', 'U         ', '8140e92b-fb43-48f5-b63b-7506185206a5', '');
INSERT INTO "public"."his_config_info"
VALUES (1477, 12, 'application-mail.yaml', 'LAOKOU_GROUP', 'laokou-mail', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
spring:
  # mail
  mail:
    host: smtp.qq.com
    username: 2413176044@qq.com
    password: ENC(A7pfP5nvz3Mmc/6Nc3ewvkcNv7AQyZz8qWri7Kn8GqW4vwPFmZt+Vaq0gjS8SS1767v2h0exWJbJpA2zsTtmVA==)
    default-encoding: UTF-8', '3e16e7d481fcc41559736dc5f7258251', '2024-07-16 21:52:10.148834',
		'2024-07-16 21:52:10.152', 'nacos', '127.0.0.1', 'U         ', 'a61abd4c-ef96-42a5-99a1-616adee531f3', '');
INSERT INTO "public"."his_config_info"
VALUES (32, 13, 'application-mail.yaml', 'LAOKOU_GROUP', 'laokou-mail', '# jasypt
jasypt:
  encryptor:
    password: 5201314wumeihua
spring:
  # mail
  mail:
    host: smtp.qq.com
    username: 2413176044@qq.com
    password: hhqkeodvfywfebaf
    default-encoding: UTF-8', 'b933d73af97a47df7b93af80b8bc4227', '2024-07-16 21:52:24.670038',
		'2024-07-16 21:52:24.672', 'nacos', '127.0.0.1', 'U         ', '8140e92b-fb43-48f5-b63b-7506185206a5', '');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS "public"."permissions";
CREATE TABLE "public"."permissions"
(
	"role"     varchar(50) COLLATE "pg_catalog"."default"  NOT NULL,
	"resource" varchar(255) COLLATE "pg_catalog"."default" NOT NULL,
	"action"   varchar(8) COLLATE "pg_catalog"."default"   NOT NULL
)
;

-- ----------------------------
-- Records of permissions
-- ----------------------------
INSERT INTO "public"."permissions"
VALUES ('ADMIN', ':*:*', 'rw');
INSERT INTO "public"."permissions"
VALUES ('ADMIN', 'a61abd4c-ef96-42a5-99a1-616adee531f3:*:*', 'rw');
INSERT INTO "public"."permissions"
VALUES ('ROLE_ADMIN', ':*:*', 'rw');
INSERT INTO "public"."permissions"
VALUES ('ROLE_ADMIN', 'a61abd4c-ef96-42a5-99a1-616adee531f3:*:*', 'rw');

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS "public"."roles";
CREATE TABLE "public"."roles"
(
	"username" varchar(50) COLLATE "pg_catalog"."default" NOT NULL,
	"role"     varchar(50) COLLATE "pg_catalog"."default" NOT NULL
)
;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO "public"."roles"
VALUES ('laokou', 'ADMIN');
INSERT INTO "public"."roles"
VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS "public"."tenant_capacity";
CREATE TABLE "public"."tenant_capacity"
(
	"id"                int8                                        NOT NULL GENERATED BY DEFAULT AS IDENTITY (
		INCREMENT 1
		MINVALUE 1
		MAXVALUE 9223372036854775807
		START 1
		CACHE 1
		),
	"tenant_id"         varchar(128) COLLATE "pg_catalog"."default" NOT NULL DEFAULT ''::character varying,
	"quota"             int8                                        NOT NULL DEFAULT 0,
	"usage"             int8                                        NOT NULL DEFAULT 0,
	"max_size"          int8                                        NOT NULL DEFAULT 0,
	"max_aggr_count"    int8                                        NOT NULL DEFAULT 0,
	"max_aggr_size"     int8                                        NOT NULL DEFAULT 0,
	"max_history_count" int8                                        NOT NULL DEFAULT 0,
	"gmt_create"        timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"gmt_modified"      timestamp(6)                                NOT NULL DEFAULT CURRENT_TIMESTAMP
)
;
COMMENT ON COLUMN "public"."tenant_capacity"."id" IS '主键ID';
COMMENT ON COLUMN "public"."tenant_capacity"."tenant_id" IS 'Tenant ID';
COMMENT ON COLUMN "public"."tenant_capacity"."quota" IS '配额，0表示使用默认值';
COMMENT ON COLUMN "public"."tenant_capacity"."usage" IS '使用量';
COMMENT ON COLUMN "public"."tenant_capacity"."max_size" IS '单个配置大小上限，单位为字节，0表示使用默认值';
COMMENT ON COLUMN "public"."tenant_capacity"."max_aggr_count" IS '聚合子配置最大个数';
COMMENT ON COLUMN "public"."tenant_capacity"."max_aggr_size" IS '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值';
COMMENT ON COLUMN "public"."tenant_capacity"."max_history_count" IS '最大变更历史数量';
COMMENT ON COLUMN "public"."tenant_capacity"."gmt_create" IS '创建时间';
COMMENT ON COLUMN "public"."tenant_capacity"."gmt_modified" IS '修改时间';
COMMENT ON TABLE "public"."tenant_capacity" IS '租户容量信息表';

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS "public"."tenant_info";
CREATE TABLE "public"."tenant_info"
(
	"id"            int8                                        NOT NULL GENERATED BY DEFAULT AS IDENTITY (
		INCREMENT 1
		MINVALUE 1
		MAXVALUE 9223372036854775807
		START 1
		CACHE 1
		),
	"kp"            varchar(128) COLLATE "pg_catalog"."default" NOT NULL,
	"tenant_id"     varchar(128) COLLATE "pg_catalog"."default" DEFAULT ''::character varying,
	"tenant_name"   varchar(128) COLLATE "pg_catalog"."default" DEFAULT ''::character varying,
	"tenant_desc"   varchar(256) COLLATE "pg_catalog"."default",
	"create_source" varchar(32) COLLATE "pg_catalog"."default",
	"gmt_create"    int8                                        NOT NULL,
	"gmt_modified"  int8                                        NOT NULL
)
;
COMMENT ON COLUMN "public"."tenant_info"."id" IS 'id';
COMMENT ON COLUMN "public"."tenant_info"."kp" IS 'kp';
COMMENT ON COLUMN "public"."tenant_info"."tenant_id" IS 'tenant_id';
COMMENT ON COLUMN "public"."tenant_info"."tenant_name" IS 'tenant_name';
COMMENT ON COLUMN "public"."tenant_info"."tenant_desc" IS 'tenant_desc';
COMMENT ON COLUMN "public"."tenant_info"."create_source" IS 'create_source';
COMMENT ON COLUMN "public"."tenant_info"."gmt_create" IS '创建时间';
COMMENT ON COLUMN "public"."tenant_info"."gmt_modified" IS '修改时间';
COMMENT ON TABLE "public"."tenant_info" IS 'tenant_info';

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO "public"."tenant_info"
VALUES (2, '1', 'a61abd4c-ef96-42a5-99a1-616adee531f3', 'test', 'test', 'nacos', 1673556960289, 1716628319164);
INSERT INTO "public"."tenant_info"
VALUES (1, '1', '0dac1a68-2f01-40df-bd26-bf0cb199057a', 'dev', 'dev', 'nacos', 1716631648356, 1716631648356);
INSERT INTO "public"."tenant_info"
VALUES (3, '1', '8140e92b-fb43-48f5-b63b-7506185206a5', 'prod', 'prod', 'nacos', 1716631657328, 1716631657328);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS "public"."users";
CREATE TABLE "public"."users"
(
	"username" varchar(50) COLLATE "pg_catalog"."default"  NOT NULL,
	"password" varchar(500) COLLATE "pg_catalog"."default" NOT NULL,
	"enabled"  bool                                        NOT NULL DEFAULT true
)
;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO "public"."users"
VALUES ('laokou', '$2a$10$75WIn2J5FoX9F5wEBdFsL.0cKdv5h8QqBMKMWBABhWAxKB4TO8WZq', 'f');
INSERT INTO "public"."users"
VALUES ('nacos', '$2a$10$oVX1zRtaql9Jbsyzaaovx.TU2M6Bw0ZpCbPYWOIED58d1ougzaFRm', 'f');

-- ----------------------------
-- Auto increment value for config_info
-- ----------------------------
SELECT setval('"public"."config_info_id_seq"', 1, false);

-- ----------------------------
-- Indexes structure for table config_info
-- ----------------------------
CREATE UNIQUE INDEX "config_info_data_id_group_id_tenant_id_idx" ON "public"."config_info" USING btree (
																										"data_id"
																										COLLATE "pg_catalog"."default"
																										"pg_catalog"."text_ops"
																										ASC NULLS LAST,
																										"group_id"
																										COLLATE "pg_catalog"."default"
																										"pg_catalog"."text_ops"
																										ASC NULLS LAST,
																										"tenant_id"
																										COLLATE "pg_catalog"."default"
																										"pg_catalog"."text_ops"
																										ASC NULLS LAST
	);

-- ----------------------------
-- Primary Key structure for table config_info
-- ----------------------------
ALTER TABLE "public"."config_info"
	ADD CONSTRAINT "config_info_pkey" PRIMARY KEY ("id");

-- ----------------------------
-- Auto increment value for config_info_aggr
-- ----------------------------
SELECT setval('"public"."config_info_aggr_id_seq"', 1, false);

-- ----------------------------
-- Indexes structure for table config_info_aggr
-- ----------------------------
CREATE UNIQUE INDEX "config_info_aggr_data_id_group_id_tenant_id_datum_id_idx" ON "public"."config_info_aggr" USING btree (
																														   "data_id"
																														   COLLATE "pg_catalog"."default"
																														   "pg_catalog"."text_ops"
																														   ASC
																														   NULLS
																														   LAST,
																														   "group_id"
																														   COLLATE "pg_catalog"."default"
																														   "pg_catalog"."text_ops"
																														   ASC
																														   NULLS
																														   LAST,
																														   "tenant_id"
																														   COLLATE "pg_catalog"."default"
																														   "pg_catalog"."text_ops"
																														   ASC
																														   NULLS
																														   LAST,
																														   "datum_id"
																														   COLLATE "pg_catalog"."default"
																														   "pg_catalog"."text_ops"
																														   ASC
																														   NULLS
																														   LAST
	);

-- ----------------------------
-- Primary Key structure for table config_info_aggr
-- ----------------------------
ALTER TABLE "public"."config_info_aggr"
	ADD CONSTRAINT "config_info_aggr_pkey" PRIMARY KEY ("id");

-- ----------------------------
-- Auto increment value for config_info_beta
-- ----------------------------
SELECT setval('"public"."config_info_beta_id_seq"', 1, false);

-- ----------------------------
-- Indexes structure for table config_info_beta
-- ----------------------------
CREATE UNIQUE INDEX "config_info_beta_data_id_group_id_tenant_id_idx" ON "public"."config_info_beta" USING btree (
																												  "data_id"
																												  COLLATE "pg_catalog"."default"
																												  "pg_catalog"."text_ops"
																												  ASC
																												  NULLS
																												  LAST,
																												  "group_id"
																												  COLLATE "pg_catalog"."default"
																												  "pg_catalog"."text_ops"
																												  ASC
																												  NULLS
																												  LAST,
																												  "tenant_id"
																												  COLLATE "pg_catalog"."default"
																												  "pg_catalog"."text_ops"
																												  ASC
																												  NULLS
																												  LAST
	);

-- ----------------------------
-- Primary Key structure for table config_info_beta
-- ----------------------------
ALTER TABLE "public"."config_info_beta"
	ADD CONSTRAINT "config_info_beta_pkey" PRIMARY KEY ("id");

-- ----------------------------
-- Auto increment value for config_info_tag
-- ----------------------------
SELECT setval('"public"."config_info_tag_id_seq"', 1, false);

-- ----------------------------
-- Indexes structure for table config_info_tag
-- ----------------------------
CREATE UNIQUE INDEX "config_info_tag_data_id_group_id_tenant_id_tag_id_idx" ON "public"."config_info_tag" USING btree (
																													   "data_id"
																													   COLLATE "pg_catalog"."default"
																													   "pg_catalog"."text_ops"
																													   ASC
																													   NULLS
																													   LAST,
																													   "group_id"
																													   COLLATE "pg_catalog"."default"
																													   "pg_catalog"."text_ops"
																													   ASC
																													   NULLS
																													   LAST,
																													   "tenant_id"
																													   COLLATE "pg_catalog"."default"
																													   "pg_catalog"."text_ops"
																													   ASC
																													   NULLS
																													   LAST,
																													   "tag_id"
																													   COLLATE "pg_catalog"."default"
																													   "pg_catalog"."text_ops"
																													   ASC
																													   NULLS
																													   LAST
	);

-- ----------------------------
-- Primary Key structure for table config_info_tag
-- ----------------------------
ALTER TABLE "public"."config_info_tag"
	ADD CONSTRAINT "config_info_tag_pkey" PRIMARY KEY ("id");

-- ----------------------------
-- Auto increment value for config_tags_relation
-- ----------------------------
SELECT setval('"public"."config_tags_relation_nid_seq"', 6, true);

-- ----------------------------
-- Indexes structure for table config_tags_relation
-- ----------------------------
CREATE UNIQUE INDEX "config_tags_relation_id_tag_name_tag_type_idx" ON "public"."config_tags_relation" USING btree (
																													"id"
																													"pg_catalog"."int8_ops"
																													ASC
																													NULLS
																													LAST,
																													"tag_name"
																													COLLATE "pg_catalog"."default"
																													"pg_catalog"."text_ops"
																													ASC
																													NULLS
																													LAST,
																													"tag_type"
																													COLLATE "pg_catalog"."default"
																													"pg_catalog"."text_ops"
																													ASC
																													NULLS
																													LAST
	);
CREATE INDEX "config_tags_relation_tenant_id_idx" ON "public"."config_tags_relation" USING btree (
																								  "tenant_id"
																								  COLLATE "pg_catalog"."default"
																								  "pg_catalog"."text_ops"
																								  ASC NULLS LAST
	);

-- ----------------------------
-- Primary Key structure for table config_tags_relation
-- ----------------------------
ALTER TABLE "public"."config_tags_relation"
	ADD CONSTRAINT "config_tags_relation_pkey" PRIMARY KEY ("nid");

-- ----------------------------
-- Primary Key structure for table databasechangeloglock
-- ----------------------------
ALTER TABLE "public"."databasechangeloglock"
	ADD CONSTRAINT "databasechangeloglock_pkey" PRIMARY KEY ("id");

-- ----------------------------
-- Auto increment value for group_capacity
-- ----------------------------
SELECT setval('"public"."group_capacity_id_seq"', 1, false);

-- ----------------------------
-- Indexes structure for table group_capacity
-- ----------------------------
CREATE UNIQUE INDEX "group_capacity_group_id_idx" ON "public"."group_capacity" USING btree (
																							"group_id"
																							COLLATE "pg_catalog"."default"
																							"pg_catalog"."text_ops" ASC
																							NULLS LAST
	);

-- ----------------------------
-- Primary Key structure for table group_capacity
-- ----------------------------
ALTER TABLE "public"."group_capacity"
	ADD CONSTRAINT "group_capacity_pkey" PRIMARY KEY ("id");

-- ----------------------------
-- Auto increment value for his_config_info
-- ----------------------------
SELECT setval('"public"."his_config_info_nid_seq"', 13, true);

-- ----------------------------
-- Indexes structure for table his_config_info
-- ----------------------------
CREATE INDEX "his_config_info_data_id_idx" ON "public"."his_config_info" USING btree (
																					  "data_id"
																					  COLLATE "pg_catalog"."default"
																					  "pg_catalog"."text_ops" ASC NULLS
																					  LAST
	);
CREATE INDEX "his_config_info_gmt_create_idx" ON "public"."his_config_info" USING btree (
																						 "gmt_create"
																						 "pg_catalog"."timestamp_ops"
																						 ASC NULLS LAST
	);
CREATE INDEX "his_config_info_gmt_modified_idx" ON "public"."his_config_info" USING btree (
																						   "gmt_modified"
																						   "pg_catalog"."timestamp_ops"
																						   ASC NULLS LAST
	);

-- ----------------------------
-- Primary Key structure for table his_config_info
-- ----------------------------
ALTER TABLE "public"."his_config_info"
	ADD CONSTRAINT "his_config_info_pkey" PRIMARY KEY ("nid");

-- ----------------------------
-- Indexes structure for table permissions
-- ----------------------------
CREATE UNIQUE INDEX "permissions_role_resource_action_idx" ON "public"."permissions" USING btree (
																								  "role"
																								  COLLATE "pg_catalog"."default"
																								  "pg_catalog"."text_ops"
																								  ASC NULLS LAST,
																								  "resource"
																								  COLLATE "pg_catalog"."default"
																								  "pg_catalog"."text_ops"
																								  ASC NULLS LAST,
																								  "action"
																								  COLLATE "pg_catalog"."default"
																								  "pg_catalog"."text_ops"
																								  ASC NULLS LAST
	);

-- ----------------------------
-- Indexes structure for table roles
-- ----------------------------
CREATE UNIQUE INDEX "roles_username_role_idx" ON "public"."roles" USING btree (
																			   "username" COLLATE "pg_catalog"."default"
																			   "pg_catalog"."text_ops" ASC NULLS LAST,
																			   "role" COLLATE "pg_catalog"."default"
																			   "pg_catalog"."text_ops" ASC NULLS LAST
	);

-- ----------------------------
-- Auto increment value for tenant_capacity
-- ----------------------------
SELECT setval('"public"."tenant_capacity_id_seq"', 1, false);

-- ----------------------------
-- Indexes structure for table tenant_capacity
-- ----------------------------
CREATE UNIQUE INDEX "tenant_capacity_tenant_id_idx" ON "public"."tenant_capacity" USING btree (
																							   "tenant_id"
																							   COLLATE "pg_catalog"."default"
																							   "pg_catalog"."text_ops"
																							   ASC NULLS LAST
	);

-- ----------------------------
-- Primary Key structure for table tenant_capacity
-- ----------------------------
ALTER TABLE "public"."tenant_capacity"
	ADD CONSTRAINT "tenant_capacity_pkey" PRIMARY KEY ("id");

-- ----------------------------
-- Auto increment value for tenant_info
-- ----------------------------
SELECT setval('"public"."tenant_info_id_seq"', 1, false);

-- ----------------------------
-- Indexes structure for table tenant_info
-- ----------------------------
CREATE UNIQUE INDEX "tenant_info_kp_tenant_id_idx" ON "public"."tenant_info" USING btree (
																						  "kp"
																						  COLLATE "pg_catalog"."default"
																						  "pg_catalog"."text_ops" ASC
																						  NULLS LAST,
																						  "tenant_id"
																						  COLLATE "pg_catalog"."default"
																						  "pg_catalog"."text_ops" ASC
																						  NULLS LAST
	);
CREATE INDEX "tenant_info_tenant_id_idx" ON "public"."tenant_info" USING btree (
																				"tenant_id"
																				COLLATE "pg_catalog"."default"
																				"pg_catalog"."text_ops" ASC NULLS LAST
	);

-- ----------------------------
-- Primary Key structure for table tenant_info
-- ----------------------------
ALTER TABLE "public"."tenant_info"
	ADD CONSTRAINT "tenant_info_pkey" PRIMARY KEY ("id");

-- ----------------------------
-- Primary Key structure for table users
-- ----------------------------
ALTER TABLE "public"."users"
	ADD CONSTRAINT "users_pkey" PRIMARY KEY ("username");
