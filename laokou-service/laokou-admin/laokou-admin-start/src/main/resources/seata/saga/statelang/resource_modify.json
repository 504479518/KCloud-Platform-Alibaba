{
  "Name": "resourceModify",
  "Comment": "资源修改",
  "StartState": "CreateResourceAudit",
  "Version": "0.0.1",
  "States": {
    "CreateResourceAudit": {
      "Type": "ServiceTask",
      "ServiceName": "resourceAuditAction",
      "ServiceMethod": "create",
      "CompensateState": "CompensateCreateResourceAudit",
      "Input": [
        "$.[businessKey]",
        "$.[title]",
        "$.[remark]",
        "$.[code]",
        "$.[url]",
        "$.[resourceId]"
      ],
      "Output": {
        "resourceAuditResult": "$.#root"
      },
      "Status": {
        "#root == true": "SU",
        "#root == false": "FA",
        "$Exception{java.lang.Throwable}": "UN"
      },
      "Next": "ChoiceState1"
    },
    "ChoiceState1": {
      "Type": "Choice",
      "Choices": [
        {
          "Expression": "[resourceAuditResult] == true",
          "Next": "FlowStart"
        }
      ],
      "Default": "Fail"
    },
    "FlowStart": {
      "Type": "ServiceTask",
      "ServiceName": "startFlowAction",
      "ServiceMethod": "start",
      "CompensateState": "CompensateFlowStart",
      "Input": [
        "$.[businessKey]",
        "$.[instanceName]",
        "$.[definitionKey]",
        {
          "throwException": "$.[rollback]"
        }
      ],
      "Output": {
        "compensateFlowModifyResult": "$.#root"
      },
      "Status": {
        "#root == true": "SU",
        "#root == false": "FA",
        "$Exception{java.lang.Throwable}": "UN"
      },
      "Catch": [
        {
          "Exceptions": [
            "java.lang.Throwable"
          ],
          "Next": "CompensationTrigger"
        }
      ],
      "Next": "ChoiceState2"
    },
    "ChoiceState2": {
      "Type": "Choice",
      "Choices": [
        {
          "Expression": "[compensateFlowModifyResult] == true",
          "Next": "ModifyResource"
        }
      ],
      "Default": "Fail"
    },
    "ModifyResource": {
      "Type": "ServiceTask",
      "ServiceName": "resourceAction",
      "ServiceMethod": "modify",
      "CompensateState": "CompensateModifyResource",
      "Input": [
        "$.[businessKey]",
        "$.[status]",
        {
          "throwException": "$.[rollback]"
        }
      ],
      "Output": {
        "compensateModifyResourceResult": "$.#root"
      },
      "Status": {
        "#root == true": "SU",
        "#root == false": "FA",
        "$Exception{java.lang.Throwable}": "UN"
      },
      "Catch": [
        {
          "Exceptions": [
            "java.lang.Throwable"
          ],
          "Next": "CompensationTrigger"
        }
      ],
      "Next": "Succeed"
    },
    "CompensateCreateResourceAudit": {
      "Type": "ServiceTask",
      "ServiceName": "resourceAuditAction",
      "ServiceMethod": "compensateCreate",
      "Input": [
        "$.[businessKey]"
      ]
    },
    "CompensateModifyResource": {
      "Type": "ServiceTask",
      "ServiceName": "resourceAction",
      "ServiceMethod": "compensateModify",
      "Input": [
        "$.[businessKey]",
        "$.[status]"
      ]
    },
    "CompensateFlowStart": {
      "Type": "ServiceTask",
      "ServiceName": "startFlowAction",
      "ServiceMethod": "compensateStart",
      "Input": [
        "$.[businessKey]",
        "$.[definitionKey]"
      ]
    },
    "CompensationTrigger": {
      "Type": "CompensationTrigger",
      "Next": "Fail"
    },
    "Succeed": {
      "Type": "Succeed"
    },
    "Fail": {
      "Type": "Fail",
      "ErrorCode": "PURCHASE_FAILED",
      "Message": "purchase failed"
    }
  }
}